/* 
 * Animation styles using CSS Variables from cssVariables.css
 * These styles work with the centralized design tokens for consistent theming
 * Import cssVariables.css before this file for proper variable resolution
 */

/* Animation Keyframes */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideUp {
  from {
    transform: translateY(30px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes scaleIn {
  from {
    transform: scale(0.95);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes slideInFromLeft {
  from {
    transform: translateX(-20px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slideInFromRight {
  from {
    transform: translateX(20px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes pulse {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}

@keyframes glow {
  0%, 100% {
    box-shadow: 0 0 20px rgba(139, 92, 246, 0.3);
  }
  50% {
    box-shadow: 0 0 30px rgba(139, 92, 246, 0.5);
  }
}

@keyframes shimmer {
  0% {
    background-position: -200px 0;
  }
  100% {
    background-position: calc(200px + 100%) 0;
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
}

@keyframes bounce {
  0%, 20%, 53%, 80%, 100% {
    transform: translateY(0);
  }
  40%, 43% {
    transform: translateY(-10px);
  }
  70% {
    transform: translateY(-5px);
  }
  90% {
    transform: translateY(-3px);
  }
}

/* Animation Classes using CSS Variables */
.fade-in {
  animation: fadeIn var(--animation-duration-fade-in) var(--animation-easing-default) forwards;
}

.slide-up {
  animation: slideUp var(--animation-duration-slide-up) var(--animation-easing-default) forwards;
}

.scale-in {
  animation: scaleIn var(--animation-duration-scale-in) var(--animation-easing-default) forwards;
}

.slide-in-left {
  animation: slideInFromLeft var(--animation-duration-slide-in) var(--animation-easing-default) forwards;
}

.slide-in-right {
  animation: slideInFromRight var(--animation-duration-slide-in) var(--animation-easing-default) forwards;
}

.pulse {
  animation: pulse var(--animation-duration-pulse) var(--animation-easing-smooth) infinite;
}

.glow {
  animation: glow var(--animation-duration-glow) var(--animation-easing-smooth) infinite alternate;
}

.shimmer {
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.2),
    transparent
  );
  background-size: 200px 100%;
  animation: shimmer var(--animation-duration-shimmer) linear infinite;
}

.float {
  animation: float var(--animation-duration-float) var(--animation-easing-smooth) infinite;
}

.bounce {
  animation: bounce var(--animation-duration-bounce) var(--animation-easing-smooth);
}

/* Delay Classes using CSS Variables */
.animation-delay-100 {
  animation-delay: var(--animation-delay-short);
}

.animation-delay-200 {
  animation-delay: var(--animation-delay-medium);
}

.animation-delay-300 {
  animation-delay: var(--animation-delay-long);
}

.animation-delay-400 {
  animation-delay: 0.4s;
}

.animation-delay-500 {
  animation-delay: var(--animation-delay-extra-long);
}

/* Transition Classes using CSS Variables */
.transition-all {
  transition: all var(--animation-duration-standard) var(--animation-easing-default);
}

.transition-fast {
  transition: all var(--animation-duration-fast) var(--animation-easing-default);
}

.transition-slow {
  transition: all var(--animation-duration-fade-in) var(--animation-easing-default);
}

/* Hover Effects */
.hover-scale:hover {
  transform: scale(1.05);
}

.hover-lift:hover {
  transform: translateY(-4px);
  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
}

.hover-glow:hover {
  box-shadow: 0 0 30px rgba(139, 92, 246, 0.4);
}

.hover-blur:hover {
  backdrop-filter: blur(20px);
}

/* Glass Morphism Effects using CSS Variables */
.glass-light {
  background: var(--glass-light-bg);
  backdrop-filter: var(--glass-light-backdrop);
  border: var(--glass-light-border);
}

.glass-dark {
  background: var(--glass-dark-bg);
  backdrop-filter: var(--glass-dark-backdrop);
  border: var(--glass-dark-border);
}

.glass-strong {
  background: var(--glass-strong-bg);
  backdrop-filter: var(--glass-strong-backdrop);
  border: var(--glass-strong-border);
}

/* Responsive Animation Controls */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

/* Dark/Light Theme Animations */
@media (prefers-color-scheme: dark) {
  .glass-auto {
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }
}

@media (prefers-color-scheme: light) {
  .glass-auto {
    background: rgba(255, 255, 255, 0.8);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(0, 0, 0, 0.1);
  }
}

/* Loading States using CSS Variables */
.loading-skeleton {
  background: linear-gradient(
    90deg,
    rgba(255, 255, 255, 0.1),
    rgba(255, 255, 255, 0.2),
    rgba(255, 255, 255, 0.1)
  );
  background-size: 200px 100%;
  animation: shimmer var(--animation-duration-skeleton) linear infinite;
}

.loading-dots::after {
  content: '.';
  animation: loadingDots var(--animation-duration-loading-dots) steps(5, end) infinite;
}

@keyframes loadingDots {
  0%, 20% {
    color: rgba(0, 0, 0, 0);
    text-shadow: 0.25em 0 0 rgba(0, 0, 0, 0), 0.5em 0 0 rgba(0, 0, 0, 0);
  }
  40% {
    color: currentColor;
    text-shadow: 0.25em 0 0 rgba(0, 0, 0, 0), 0.5em 0 0 rgba(0, 0, 0, 0);
  }
  60% {
    text-shadow: 0.25em 0 0 currentColor, 0.5em 0 0 rgba(0, 0, 0, 0);
  }
  80%, 100% {
    text-shadow: 0.25em 0 0 currentColor, 0.5em 0 0 currentColor;
  }
}

/* Loading indicator using CSS Variables */
.loading-indicator {
  position: relative;
  overflow: hidden;
}

.loading-indicator::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.3),
    transparent
  );
  animation: shimmer var(--animation-duration-skeleton) ease-in-out infinite;
  z-index: 1;
}