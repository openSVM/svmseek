{"version":3,"file":"static/js/102.2a19cb34.chunk.js","mappings":"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","sources":["utils/swap/api.js","images/coinPlaceholder.svg","components/TokenIcon.tsx","images/addIcon.svg","components/EthFeeEstimate.tsx","images/Dots.svg","images/refresh.svg","images/receive.svg","images/send.svg","images/explorer.svg","images/blueExplorer.svg","images/trade.svg","images/ReceiveIcon.svg","images/Union.svg","pages/Wallet/components/ActivitiesDropdown.tsx","pages/Wallet/components/AssetsTable.tsx","utils/swap/eth.js","utils/markets.ts","images/importHardware.svg","images/exportMnemonic.svg","images/deleteAccount.svg","images/merge.svg","images/connections.svg","pages/Wallet/components/AddAccountPopup.tsx","components/CopyableDisplay.js","components/TokenInfoDialog.js","components/AddTokenDialog.js","components/SendDialog.js","components/CloseTokenAccountButton.js","components/MergeAccountsDialog.js","components/BalancesList.js","pages/Wallet/components/AddHardwareWalletPopup.tsx","pages/Wallet/components/ExportAccount.tsx","pages/Wallet/components/ForgetWallet.tsx","pages/Connections/ConnectionsList.tsx","pages/Connections/index.tsx","pages/Wallet/components/AccountsSelector.tsx","utils/config.js"],"sourcesContent":["import { useAsyncData } from '../fetch-loop';\n\nexport class SwapApiError extends Error {\n  constructor(msg, status) {\n    super(msg);\n    this.name = 'SwapApiError';\n    this.status = status;\n  }\n}\n\nexport async function swapApiRequest(\n  method,\n  path,\n  body,\n  { ignoreUserErrors = false } = {},\n) {\n  let headers = {};\n  let params = { headers, method };\n  if (method === 'GET') {\n    params.cache = 'no-cache';\n  } else if (body) {\n    headers['Content-Type'] = 'application/json';\n    params.body = JSON.stringify(body);\n  }\n  let resp = await fetch(`https://swap.sollet.io/api/${path}`, params);\n  return await handleSwapApiResponse(resp, ignoreUserErrors);\n}\n\nasync function handleSwapApiResponse(resp, ignoreUserErrors) {\n  let json = await resp.json();\n  if (!json.success) {\n    if (ignoreUserErrors && resp.status >= 400 && resp.status < 500) {\n      return null;\n    }\n    throw new SwapApiError(json.error, resp.status);\n  }\n  return json.result;\n}\n\nexport function useSwapApiGet(path, options) {\n  return useAsyncData(\n    async () => {\n      if (!path) {\n        return null;\n      }\n      return await swapApiRequest('GET', path, undefined, {\n        ignoreUserErrors: true,\n      });\n    },\n    ['swapApiGet', path],\n    options,\n  );\n}\n","var _circle, _circle2, _g, _g2, _defs;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgCoinPlaceholder(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 43,\n    height: 43,\n    viewBox: \"0 0 43 43\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 21.5984,\n    cy: 21.5984,\n    r: 20.9016,\n    fill: \"#CC9F02\"\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 20.9016,\n    cy: 20.9016,\n    r: 20.9016,\n    fill: \"#FFC90A\"\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    filter: \"url(#filter0_i)\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 20.9016,\n    cy: 20.9016,\n    r: 17.9631,\n    fill: \"#F1C21B\"\n  }))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    filter: \"url(#filter1_d)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M30.1737 15.4123L20.87 10.1021L11.5669 15.4119L11.5717 15.4144L11.5121 26.2973L20.8745 31.7014L20.832 20.2397L30.1737 15.4123ZM29.4291 26.7675L30.2801 26.2755L30.2801 26.2716L29.4291 26.7675ZM30.1854 15.4091L32.8943 14.0195L32.8947 27.888L32.8928 27.8868L20.8829 34.8205V34.8281L11.4952 29.3993L11.4951 29.4129L8.85462 27.8828L8.85688 14.0251L8.8501 14.0217L20.8607 7.07019L20.87 7.0756L20.8793 7.07019L32.8899 14.0217L30.1853 15.4077L30.1854 15.4091Z\",\n    fill: \"#F7D43D\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter0_i\",\n    x: 2.93848,\n    y: 2.93854,\n    width: 35.9262,\n    height: 35.9262,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"BackgroundImageFix\",\n    result: \"shape\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n    result: \"hardAlpha\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", null), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 0.25\n  }), /*#__PURE__*/React.createElement(\"feComposite\", {\n    in2: \"hardAlpha\",\n    operator: \"arithmetic\",\n    k2: -1,\n    k3: 1\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"shape\",\n    result: \"effect1_innerShadow\"\n  })), /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter1_d\",\n    x: 8.8501,\n    y: 7.07019,\n    width: 24.0446,\n    height: 28.258,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", {\n    dy: 0.5\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 0.808333 0 0 0 0 0.633761 0 0 0 0 0.0134722 0 0 0 1 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"BackgroundImageFix\",\n    result: \"effect1_dropShadow\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"effect1_dropShadow\",\n    result: \"shape\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCoinPlaceholder);\nexport default __webpack_public_path__ + \"static/media/coinPlaceholder.8d99625d13f8865bde461cb2c9c677ba.svg\";\nexport { ForwardRef as ReactComponent };","import { TokenInstructions } from '@project-serum/serum';\nimport React, { useState } from 'react';\nimport CoinPlaceholder from '../images/coinPlaceholder.svg';\nimport { CCAI_MINT } from '../utils/tokens/instructions';\n\nexport default function TokenIcon({\n  mint,\n  tokenLogoUri,\n  tokenName,\n  size = '2rem',\n  style = {}\n}: {\n  mint?: any;\n  tokenLogoUri?: string;\n  tokenName: string;\n  size?: string;\n  style?: any\n}) {\n  const [hasError, setHasError] = useState(false);\n\n  if (mint === TokenInstructions.WRAPPED_SOL_MINT.toString()) {\n    tokenLogoUri =\n      'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/solana/info/logo.png';\n  }\n  \n  if (mint === CCAI_MINT.toString()) {\n    tokenLogoUri =\n    'https://svmseek.com/logo_rounded.png';\n  }\n\n  if (hasError || !tokenLogoUri) {\n    tokenLogoUri = CoinPlaceholder;\n  }\n\n  return (\n    <img\n      src={tokenLogoUri}\n      title={tokenName}\n      alt={tokenName}\n      style={{\n        width: size,\n        height: size,\n        borderRadius: mint === CCAI_MINT.toString() ? 0 : `calc(${size} / 2)`,\n        ...style,\n      }}\n      onError={() => setHasError(true)}\n    />\n  );\n}\n","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgAddIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 8H8M8 8H16M8 8V0M8 8V16\",\n    stroke: \"#651CE4\",\n    strokeWidth: 4\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAddIcon);\nexport default __webpack_public_path__ + \"static/media/addIcon.dbbbaa6c79753bfa09ed592c3cea7621.svg\";\nexport { ForwardRef as ReactComponent };","import { DialogContentText } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { Title } from \"../pages/commonStyles\";\nimport { useConnection } from \"../utils/connection\";\nimport { priceStore, serumMarkets } from \"../utils/markets\";\n\nfunction FeeContentText({ ethFee, ethPrice, warning = false, prefix = \"\", bold = false, style = {} }) {\n  let usdFeeEstimate = ethPrice !== undefined ? ethPrice * ethFee : null;\n\n  return (\n    <Title\n      color={warning ? 'secondary' : 'textPrimary'}\n      // @ts-ignore\n      style={{ marginBottom: '0px', fontWeight: bold ? '500' : undefined, ...style }}\n    >\n      {prefix}\n      {ethFee.toFixed(4)}\n      {' ETH'}\n      {usdFeeEstimate && ` (${usdFeeEstimate.toFixed(2)} USD)`}\n    </Title>\n  );\n}\n\nexport function EthFeeEstimate({ ethFeeData, insufficientEthBalance }) {\n  let [ethFeeEstimate, loaded, error] = ethFeeData;\n  const [ethPrice, setEthPrice] = useState<number | undefined |null>(undefined);\n  const connection = useConnection();\n  useEffect(() => {\n    if (ethPrice === undefined) {\n      let m = serumMarkets['ETH'];\n      priceStore.getPrice(connection, m.name).then(setEthPrice);\n    }\n  }, [ethPrice, connection]);\n\n  if (!loaded && !error) {\n    return (\n      <DialogContentText color=\"textPrimary\">Loading...</DialogContentText>\n    );\n  } else if (error) {\n    return (\n      <DialogContentText color=\"textPrimary\">\n        Unable to estimate\n      </DialogContentText>\n    );\n  }\n\n  if (Array.isArray(ethFeeEstimate)) {\n    const [approveFee, swapFee] = ethFeeEstimate;\n    return (\n      <DialogContentText>\n        <FeeContentText ethFee={approveFee} ethPrice={ethPrice} prefix={\"Approve: \"} />\n        <FeeContentText style={{ margin: '0 1rem'}} ethFee={swapFee} ethPrice={ethPrice} prefix={\"Swap: \"} />\n        <FeeContentText\n          warning={insufficientEthBalance}\n          ethFee={approveFee + swapFee}\n          ethPrice={ethPrice}\n          prefix={\"Total: \"}\n          bold\n        />\n      </DialogContentText>\n    );\n  }\n\n  return (\n    <FeeContentText\n      warning={insufficientEthBalance}\n      ethFee={ethFeeEstimate}\n      ethPrice={ethPrice}\n    />\n  );\n}","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgDots(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 4,\n    viewBox: \"0 0 20 4\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M18 4C16.8954 4 16 3.10457 16 2C16 0.89543 16.8954 -1.35704e-07 18 -8.74219e-08C19.1046 -3.91396e-08 20 0.895431 20 2C20 3.10457 19.1046 4 18 4ZM10 4C8.89543 4 8 3.10457 8 2C8 0.89543 8.89543 -4.85396e-07 10 -4.37114e-07C11.1046 -3.88832e-07 12 0.89543 12 2C12 3.10457 11.1046 4 10 4ZM-8.74228e-08 2C-1.35705e-07 3.10457 0.895429 4 2 4C3.10457 4 4 3.10457 4 2C4 0.89543 3.10457 -7.38522e-07 2 -7.86804e-07C0.89543 -8.35086e-07 -3.91405e-08 0.89543 -8.74228e-08 2Z\",\n    fill: \"#F5F5FB\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgDots);\nexport default __webpack_public_path__ + \"static/media/Dots.c19b5383de4a13878a04543cdb1dea68.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgRefresh(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.9783 1.58361C15.9777 1.52105 15.9597 1.45984 15.926 1.40662C15.8924 1.35341 15.8445 1.31023 15.7875 1.28178C15.7305 1.25333 15.6666 1.2407 15.6028 1.24526C15.539 1.24983 15.4776 1.27141 15.4255 1.30767L14.0524 2.26984L13.9443 2.34594C12.4647 0.902563 10.434 0 8.18376 0C3.67111 0 0 3.58903 0 8C0 12.411 3.67134 16 8.18376 16C9.52375 16.0002 10.8433 15.6788 12.0264 15.0638C13.2096 14.4489 14.2201 13.5593 14.9693 12.4733C14.9995 12.4298 15.0206 12.3809 15.0315 12.3293C15.0423 12.2778 15.0427 12.2247 15.0325 12.1731C15.0223 12.1214 15.0017 12.0722 14.9721 12.0284C14.9424 11.9845 14.9042 11.9468 14.8595 11.9174L12.8121 10.5284C12.7158 10.4654 12.598 10.4423 12.4842 10.4639C12.3705 10.4856 12.2702 10.5503 12.2051 10.644C11.3 11.9519 9.80032 12.7328 8.19139 12.7328C5.52145 12.7328 3.34909 10.6097 3.34909 8.00045C3.34909 5.39122 5.52145 3.26815 8.19139 3.26815C9.31822 3.26815 10.3517 3.65112 11.1746 4.2843L10.9433 4.44688L9.56932 5.40883C9.51751 5.44555 9.477 5.49547 9.45222 5.55316C9.42745 5.61084 9.41935 5.67406 9.42881 5.73594C9.43827 5.79781 9.46493 5.85595 9.50588 5.90403C9.54683 5.95211 9.6005 5.98827 9.66103 6.00858L15.5391 7.96613C15.6456 8.00248 15.7623 7.98487 15.8552 7.92029C15.9473 7.8548 16.0005 7.75161 16 7.64232L15.9783 1.58361Z\",\n    fill: \"#651CE4\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgRefresh);\nexport default __webpack_public_path__ + \"static/media/refresh.b5fd2fa834c6707bda7a1e03d59d08bc.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgReceive(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M8 15C4.13401 15 1 11.866 1 8C1 4.13401 4.13401 0.999999 8 1C11.866 1 15 4.13401 15 8C15 11.866 11.866 15 8 15ZM8 16C3.58172 16 4.10854e-07 12.4183 6.03983e-07 8C7.97112e-07 3.58172 3.58172 -5.4282e-07 8 -3.49691e-07C12.4183 -1.56562e-07 16 3.58172 16 8C16 12.4183 12.4183 16 8 16ZM11.1667 10.6667L11.1667 6.16667C11.1667 5.89052 10.9428 5.66667 10.6667 5.66667C10.3905 5.66667 10.1667 5.89052 10.1667 6.16667L10.1667 9.45956L5.68689 4.97978L4.97978 5.68689L9.45956 10.1667L6.16667 10.1667C5.89052 10.1667 5.66667 10.3905 5.66667 10.6667C5.66667 10.9428 5.89052 11.1667 6.16667 11.1667L10.6667 11.1667C10.9428 11.1667 11.1667 10.9428 11.1667 10.6667Z\",\n    fill: \"#17181A\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgReceive);\nexport default __webpack_public_path__ + \"static/media/receive.9127a151c19b85300e5ea2c449bb5cc6.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgSend(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M8 1C4.13401 1 1 4.13401 1 8C1 11.866 4.13401 15 8 15C11.866 15 15 11.866 15 8C15 4.13401 11.866 1 8 1ZM8 1.30337e-06C3.58172 1.49649e-06 4.10854e-07 3.58172 6.03983e-07 8C7.97112e-07 12.4183 3.58172 16 8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 1.11024e-06 8 1.30337e-06ZM11.1667 5.33333L11.1667 9.83333C11.1667 10.1095 10.9428 10.3333 10.6667 10.3333C10.3905 10.3333 10.1667 10.1095 10.1667 9.83333L10.1667 6.54044L5.68689 11.0202L4.97978 10.3131L9.45956 5.83333L6.16667 5.83333C5.89052 5.83333 5.66667 5.60948 5.66667 5.33333C5.66667 5.05719 5.89052 4.83333 6.16667 4.83333L10.6667 4.83333C10.9428 4.83333 11.1667 5.05719 11.1667 5.33333Z\",\n    fill: \"#F8FAFF\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSend);\nexport default __webpack_public_path__ + \"static/media/send.c5f0b8f95ac62d40f45d2e2dfc630c8e.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgExplorer(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 0C6.41775 0 4.87103 0.469192 3.55544 1.34824C2.23985 2.22729 1.21447 3.47672 0.608967 4.93853C0.00346627 6.40034 -0.15496 8.00887 0.153721 9.56072C0.462403 11.1126 1.22433 12.538 2.34315 13.6569C3.46197 14.7757 4.88743 15.5376 6.43928 15.8463C7.99113 16.155 9.59966 15.9965 11.0615 15.391C12.5233 14.7855 13.7727 13.7602 14.6518 12.4446C15.5308 11.129 16 9.58225 16 8C15.9976 5.87901 15.1539 3.84558 13.6542 2.34582C12.1544 0.846052 10.121 0.00241984 8 0ZM1.14286 8C1.14442 7.22082 1.27972 6.44769 1.54286 5.71428H4.57143L7.42857 8L5.82857 10.1103C5.74607 10.2203 5.70602 10.3564 5.71578 10.4936C5.72554 10.6308 5.78446 10.7599 5.88172 10.8571L7.42857 12.5714V14.8286C5.71615 14.6841 4.12026 13.9023 2.95638 12.6379C1.79251 11.3735 1.14536 9.71851 1.14286 8ZM11.1057 14.1057L12.5606 9.70571C12.5813 9.60167 12.5727 9.49392 12.5356 9.39451C12.4986 9.2951 12.4346 9.20796 12.3509 9.14286L7.42857 5.14286L8.57143 4H11.5886C11.7085 3.99991 11.8253 3.96212 11.9225 3.89197C12.0197 3.82183 12.0924 3.72288 12.1303 3.60914L12.4131 2.76C13.2801 3.48748 13.953 4.41864 14.3717 5.47007C14.7904 6.5215 14.9417 7.66036 14.8121 8.78463C14.6826 9.90891 14.2762 10.9835 13.6293 11.9121C12.9825 12.8408 12.1154 13.5945 11.1057 14.1057Z\",\n    fill: \"#F5F5FB\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgExplorer);\nexport default __webpack_public_path__ + \"static/media/explorer.1998a874d0a9f6d95bd7425f9875af4a.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgBlueExplorer(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 0C6.41775 0 4.87103 0.469192 3.55544 1.34824C2.23985 2.22729 1.21447 3.47672 0.608967 4.93853C0.00346627 6.40034 -0.15496 8.00887 0.153721 9.56072C0.462403 11.1126 1.22433 12.538 2.34315 13.6569C3.46197 14.7757 4.88743 15.5376 6.43928 15.8463C7.99113 16.155 9.59966 15.9965 11.0615 15.391C12.5233 14.7855 13.7727 13.7602 14.6518 12.4446C15.5308 11.129 16 9.58225 16 8C15.9976 5.87901 15.1539 3.84558 13.6542 2.34582C12.1544 0.846052 10.121 0.00241984 8 0ZM1.14286 8C1.14442 7.22082 1.27972 6.44769 1.54286 5.71428H4.57143L7.42857 8L5.82857 10.1103C5.74607 10.2203 5.70602 10.3564 5.71578 10.4936C5.72554 10.6308 5.78446 10.7599 5.88172 10.8571L7.42857 12.5714V14.8286C5.71615 14.6841 4.12026 13.9023 2.95638 12.6379C1.79251 11.3735 1.14536 9.71851 1.14286 8ZM11.1057 14.1057L12.5606 9.70571C12.5813 9.60167 12.5727 9.49392 12.5356 9.39451C12.4986 9.2951 12.4346 9.20796 12.3509 9.14286L7.42857 5.14286L8.57143 4H11.5886C11.7085 3.99991 11.8253 3.96212 11.9225 3.89197C12.0197 3.82183 12.0924 3.72288 12.1303 3.60914L12.4131 2.76C13.2801 3.48748 13.953 4.41864 14.3717 5.47007C14.7904 6.5215 14.9417 7.66036 14.8121 8.78463C14.6826 9.90891 14.2762 10.9835 13.6293 11.9121C12.9825 12.8408 12.1154 13.5945 11.1057 14.1057Z\",\n    fill: \"#651CE4\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBlueExplorer);\nexport default __webpack_public_path__ + \"static/media/blueExplorer.6fc7aaa2f0d9d22403aff2947a5f545c.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgTrade(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M1 8C0.999999 11.866 4.13401 15 8 15C11.866 15 15 11.866 15 8C15 4.13401 11.866 1 8 1C4.13401 0.999999 1 4.13401 1 8ZM0 8C0 12.4183 3.58172 16 8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 0 8 0C3.58172 0 0 3.58172 0 8ZM6 3.29289L6.35355 3.64645L8.35355 5.64645L7.64645 6.35355L6.5 5.20711V12.5H5.5V5.20711L4.35355 6.35355L3.64645 5.64645L5.64645 3.64645L6 3.29289ZM9.64645 12.8536L10 13.2071L10.3536 12.8536L12.3536 10.8536L11.6464 10.1464L10.5 11.2929V4H9.5V11.2929L8.35355 10.1464L7.64645 10.8536L9.64645 12.8536Z\",\n    fill: \"#53DF11\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgTrade);\nexport default __webpack_public_path__ + \"static/media/trade.49c074583cbf560c004e57c39f7a83d4.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgReceiveIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M8 1C4.13401 1 1 4.13401 1 8C1 11.866 4.13401 15 8 15C11.866 15 15 11.866 15 8C15 4.13401 11.866 1 8 1ZM8 1.30337e-06C3.58172 1.49649e-06 4.10854e-07 3.58172 6.03983e-07 8C7.97112e-07 12.4183 3.58172 16 8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 1.11024e-06 8 1.30337e-06ZM11.1667 5.33333L11.1667 9.83333C11.1667 10.1095 10.9428 10.3333 10.6667 10.3333C10.3905 10.3333 10.1667 10.1095 10.1667 9.83333L10.1667 6.54044L5.68689 11.0202L4.97978 10.3131L9.45956 5.83333L6.16667 5.83333C5.89052 5.83333 5.66667 5.60948 5.66667 5.33333C5.66667 5.05719 5.89052 4.83333 6.16667 4.83333L10.6667 4.83333C10.9428 4.83333 11.1667 5.05719 11.1667 5.33333Z\",\n    fill: \"#F79894\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgReceiveIcon);\nexport default __webpack_public_path__ + \"static/media/ReceiveIcon.8fc49633d0f1d45fe2c84c9eb064f008.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgUnion(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M8 15C4.13401 15 1 11.866 1 8C1 4.13401 4.13401 0.999999 8 1C11.866 1 15 4.13401 15 8C15 11.866 11.866 15 8 15ZM8 16C3.58172 16 4.10854e-07 12.4183 6.03983e-07 8C7.97112e-07 3.58172 3.58172 -5.4282e-07 8 -3.49691e-07C12.4183 -1.56562e-07 16 3.58172 16 8C16 12.4183 12.4183 16 8 16ZM11.1667 10.6667L11.1667 6.16667C11.1667 5.89052 10.9428 5.66667 10.6667 5.66667C10.3905 5.66667 10.1667 5.89052 10.1667 6.16667L10.1667 9.45956L5.68689 4.97978L4.97978 5.68689L9.45956 10.1667L6.16667 10.1667C5.89052 10.1667 5.66667 10.3905 5.66667 10.6667C5.66667 10.9428 5.89052 11.1667 6.16667 11.1667L10.6667 11.1667C10.9428 11.1667 11.1667 10.9428 11.1667 10.6667Z\",\n    fill: \"#53DF11\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgUnion);\nexport default __webpack_public_path__ + \"static/media/Union.f84ef7b0f4e1d75dc071b2b69306fa77.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport styled from 'styled-components';\n// import { BtnCustom } from '../../../components/BtnCustom';\nimport {\n  RowContainer,\n  Card,\n  VioletButton,\n  //   Title,\n  //   StyledRadio,\n  //   Row,\n  //   Legend,\n} from '../../commonStyles';\n\nimport BlueExplorer from '../../../images/blueExplorer.svg';\nimport TradeIcon from '../../../images/trade.svg';\nimport Receive from '../../../images/ReceiveIcon.svg';\nimport Send from '../../../images/Union.svg';\n\nconst StyledCard = styled(({ isFromPopup, ...props }) => <Card {...props} />)`\n  position: absolute;\n  top: 100%;\n  ${(props) => (props.isFromPopup ? 'right: 0' : 'left: 0')};\n  width: 28rem;\n  height: auto;\n  display: none;\n  z-index: 2;\n`;\n\nconst StyledTd = styled.div`\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n`;\n\nconst ActivitiesStyledCard = styled(StyledCard)`\n  width: 17rem;\n  left: -12rem;\n  top: 2rem;\n  border: 0.1rem solid #3a475c;\n  box-shadow: 0px 0px 16px rgba(125, 125, 131, 0.1);\n`;\n\nconst ButtonsContainer = styled(RowContainer)`\n  flex-direction: column;\n  justify-content: center;\n  aling-items: flex-start;\n`;\n\nconst ActivitiesDropdown = ({\n  theme,\n  urlSuffix,\n  selectToken,\n  setSendDialogOpen,\n  setDepositDialogOpen,\n  publicKey,\n  tokenSymbol,\n  tokensData,\n  quote,\n}) => {\n  return (\n    <ActivitiesStyledCard>\n      <RowContainer>\n        <RowContainer padding=\"0 1.6rem\" direction=\"column\">\n          <StyledTd\n            style={{ width: '100%', paddingLeft: '0', paddingRight: '0' }}\n          >\n            <ButtonsContainer>\n              <VioletButton\n                theme={theme}\n                hoverBackground={'rgba(255, 255, 255, 0.08)'}\n                backgroundColor={'transparent'}\n                style={{\n                  width: '100%',\n                  padding: '0 0.5rem',\n                  height: '5rem',\n                  border: 'none',\n                  color: '#f5fbfb',\n                  justifyContent: 'end',\n                  whiteSpace: 'nowrap',\n                }}\n                onClick={() => {\n                  selectToken();\n                  setDepositDialogOpen(true);\n                }}\n              >\n                <img\n                  src={Receive}\n                  alt=\"receive\"\n                  style={{ marginRight: '.5rem' }}\n                />\n                <span>Receive</span>\n              </VioletButton>\n\n              <VioletButton\n                theme={theme}\n                backgroundColor={'transparent'}\n                hoverBackground={'rgba(255, 255, 255, 0.08)'}\n                style={{\n                  width: '100%',\n                  height: '5rem',\n                  border: 'none',\n                  padding: '0 0.5rem',\n                  color: '#f5fbfb',\n                  justifyContent: 'end',\n                  whiteSpace: 'nowrap',\n                }}\n                onClick={() => {\n                  selectToken();\n                  setSendDialogOpen(true);\n                }}\n              >\n                <img src={Send} alt=\"send\" style={{ marginRight: '.5rem' }} />\n                Send\n              </VioletButton>\n\n              <VioletButton\n                hoverBackground={'rgba(255, 255, 255, 0.08)'}\n                backgroundColor={'transparent'}\n                theme={theme}\n                component=\"a\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                href={\n                  `https://solanabeach.io/address/${publicKey.toBase58()}` +\n                  urlSuffix\n                }\n                style={{\n                  width: '100%',\n                  height: '5rem',\n                  padding: '0 0.5rem',\n                  border: 'none',\n                  color: '#f5fbfb',\n                  justifyContent: 'end',\n                  whiteSpace: 'nowrap',\n                }}\n              >\n                <img\n                  src={BlueExplorer}\n                  alt=\"Explorer Icon\"\n                  style={{ marginRight: '.5rem' }}\n                />\n                View Explorer\n              </VioletButton>\n              <VioletButton\n                hoverBackground={'rgba(255, 255, 255, 0.08)'}\n                backgroundColor={'transparent'}\n                theme={theme}\n                component=\"a\"\n                target=\"_blank\"\n                disabled={\n                  !tokensData ||\n                  !tokensData.has(`${tokenSymbol?.toUpperCase()}`)\n                }\n                rel=\"noopener\"\n                href={`https://svmseek.com/chart/spot/${tokenSymbol?.toUpperCase()}_${quote}#connect_wallet`}\n                style={{\n                  width: '100%',\n                  height: '5rem',\n                  padding: '0 0.5rem',\n                  border: 'none',\n                  color: '#f5fbfb',\n                  justifyContent: 'end',\n                  whiteSpace: 'nowrap',\n                }}\n              >\n                {' '}\n                <img\n                  src={TradeIcon}\n                  alt=\"trade\"\n                  style={{ marginRight: '.5rem' }}\n                />\n                Trade\n              </VioletButton>\n            </ButtonsContainer>\n          </StyledTd>\n        </RowContainer>\n      </RowContainer>\n    </ActivitiesStyledCard>\n  );\n};\n\nexport default ActivitiesDropdown;\n","import React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport { Theme, useTheme } from '@mui/material';\nimport { PublicKey } from '@solana/web3.js';\n\nimport { Row, RowContainer, Title, VioletButton } from '../../commonStyles';\n\nimport TokenIcon from '../../../components/TokenIcon';\nimport { useWallet } from '../../../utils/wallet';\n\nimport { useSolanaExplorerUrlSuffix } from '../../../utils/connection';\nimport {\n  formatNumberToUSFormat,\n  isUSDToken,\n  stripDigitPlaces,\n  TokenInfo,\n} from '../../../utils/utils';\nimport { BtnCustom } from '../../../components/BtnCustom';\n\nimport AddIcon from '../../../images/addIcon.svg';\nimport Dots from '../../../images/Dots.svg';\nimport RefreshIcon from '../../../images/refresh.svg';\nimport ReceiveIcon from '../../../images/receive.svg';\nimport SendIcon from '../../../images/send.svg';\nimport ExplorerIcon from '../../../images/explorer.svg';\nimport ActivitiesDropdown from './ActivitiesDropdown';\nimport { findAssociatedTokenAddress } from '../../../utils/tokens';\n// import { CCAI_MINT } from '../../../utils/tokens/instructions';\nimport { Loading } from '../../../components/Loading';\n// import { MASTER_BUILD } from '../../../utils/config';\n\nexport const TableContainer = styled(({ theme, isActive, ...props }) => (\n  <Row {...props} />\n))`\n  background: ${(props) => props.theme.customPalette.grey.background};\n  border: ${(props) => props.theme.customPalette.border.new};\n  border-radius: 1.2rem;\n  height: 100%;\n\n  @media (max-width: 540px) {\n    height: calc(100% - 4rem);\n    background: none;\n    border: none;\n    border-radius: none;\n    width: 100%;\n    display: ${(props) => (props.isActive ? 'block' : 'none')};\n  }\n`;\n\nconst StyledTable = styled.table`\n  width: calc(100% - 4.8rem);\n  margin: 0 2.4rem;\n  border-spacing: 0;\n\n  & tr td:first-child {\n    border-bottom-left-radius: 1.2rem;\n    border-top-left-radius: 1.2rem;\n  }\n\n  & tr td:last-child {\n    border-top-right-radius: 1.2rem;\n    border-bottom-right-radius: 1.2rem;\n  }\n\n  & tr td:first-child {\n    padding-left: 2.4rem;\n  }\n\n  & tr td:last-child {\n    padding-right: 2.4rem;\n  }\n\n  @media (max-width: 540px) {\n    margin: 0;\n    width: calc(100%);\n  }\n`;\n\nexport const HeadRow = styled(Row)`\n  text-align: right;\n  width: 10%;\n  border-bottom: ${(props) => props.theme.customPalette.border.new};\n`;\n\nconst RefreshButton = styled(BtnCustom)`\n  @media (max-width: 540px) {\n    display: none;\n  }\n`;\n\nconst AddTokenStyledButton = styled(BtnCustom)`\n  @media (max-width: 540px) {\n    border: 0.1rem solid #f5fbfb;\n    background: transparent;\n    border-radius: 4rem;\n    height: 6rem;\n    width: 100%;\n    span {\n      color: #f5fbfb;\n    }\n  }\n`;\n\nconst ImgContainer = styled.img`\n  @media (max-width: 540px) {\n    display: none;\n  }\n`;\n\nconst AddTokenButtonContainer = styled(RowContainer)`\n  @media (max-width: 540px) {\n    display: none;\n  }\n`;\n\nconst AddTokenButton = ({\n  theme,\n  setShowAddTokenDialog,\n}: {\n  theme: Theme;\n  setShowAddTokenDialog: (isOpen: boolean) => void;\n}) => {\n  return (\n    <AddTokenStyledButton\n      textTransform={'capitalize'}\n      borderWidth=\"0\"\n      height={'100%'}\n      padding={'1.2rem 0'}\n      onClick={() => setShowAddTokenDialog(true)}\n    >\n      <ImgContainer\n        src={AddIcon}\n        alt=\"addIcon\"\n        style={{ marginRight: '1rem' }}\n      />\n      <GreyTitle theme={theme}>Add token</GreyTitle>\n    </AddTokenStyledButton>\n  );\n};\n\nexport const GreyTitle = styled(({ theme, ...props }) => (\n  <Title\n    color={theme.customPalette.grey.light}\n    fontFamily=\"Avenir Next Demi\"\n    fontSize=\"1.4rem\"\n    {...props}\n  />\n))`\n  white-space: nowrap;\n`;\n\nconst StyledTr = styled.tr`\n  height: 7rem;\n\n  &:nth-child(2n) td {\n    background: ${(props) =>\n      props.disableHover ? '' : props.theme.customPalette.dark.background};\n  }\n\n  @media (max-width: 540px) {\n    height: 9rem;\n\n    td {\n      display: none;\n    }\n\n    td:first-child,\n    td:last-child {\n      display: table-cell;\n    }\n  }\n\n  @media (min-width: 540px) {\n    &:not(:last-child) td:last-child {\n      display: none;\n    }\n  }\n`;\n\nconst StyledTd = styled.td`\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n`;\n\nconst StyledTdMenu = styled(StyledTd)`\n  position: relative;\n`;\n\nconst DropdownContainer = styled.div`\n  height: auto;\n  width: 40%;\n  padding-left: 60%;\n\n  &:hover div {\n    display: flex;\n  }\n`;\n\nconst AssetSymbol = styled(Title)`\n  font-size: 2rem;\n  font-family: Avenir Next Demi;\n`;\n\nconst AssetName = styled(Title)`\n  color: ${(props) => props.theme.customPalette.grey.light};\n  font-size: 1.4rem;\n  font-family: Avenir Next;\n  margin-left: 0.5rem;\n  width: 3rem;\n  white-space: nowrap;\n`;\n\nconst AssetAmount = styled(Title)`\n  color: ${(props) => props.theme.customPalette.green.light};\n  font-size: 1.4rem;\n  font-family: Avenir Next;\n  @media (max-width: 540px) {\n    font-size: 2rem;\n  }\n`;\n\nconst AssetAmountUSD = styled(AssetAmount)`\n  font-family: Avenir Next Demi;\n  color: #fff;\n`;\n\nconst MainHeaderRow = styled(RowContainer)`\n  height: 5rem;\n  @media (max-width: 540px) {\n    display: none;\n  }\n`;\n\nconst ValuesContainerForExtension = styled(RowContainer)`\n  display: none;\n  @media (max-width: 540px) {\n    display: flex;\n    justify-content: flex-start;\n  }\n`;\nconst ValuesContainer = styled(RowContainer)`\n  justify-content: flex-start;\n  @media (max-width: 540px) {\n    display: none;\n  }\n`;\n\nconst AddTokenBtnRow = styled(RowContainer)`\n  width: 14rem;\n  justify-content: flex-start;\n  height: 5rem;\n  padding-left: 2rem;\n  @media (max-width: 540px) {\n    width: 90%;\n    justify-content: center;\n    height: 6rem;\n    padding-left: 0;\n    margin: 0 auto;\n  }\n`;\n\nconst LastStyledTd = styled(StyledTd)`\n  padding-left: 0;\n  @media (max-width: 540px) {\n    width: 100%;\n  }\n`;\n\n// Calculating associated token addresses is an asynchronous operation, so we cache\n// the values so that we can quickly render components using them. This prevents\n// flickering for the associated token fingerprint icon.\nexport const associatedTokensCache = {};\n\nconst AssetsTable = ({\n  isActive,\n  allTokensData,\n  tokensData,\n  refreshTokensData,\n  selectToken,\n  setSendDialogOpen,\n  setDepositDialogOpen,\n  setShowAddTokenDialog,\n  setCloseTokenAccountDialogOpen,\n}: {\n  isActive?: boolean;\n  allTokensData: Map<string, TokenInfo>;\n  tokensData: Map<string, number>;\n  refreshTokensData: () => void;\n  selectToken: ({\n    publicKey,\n    isAssociatedToken,\n  }: {\n    publicKey: PublicKey;\n    isAssociatedToken: boolean;\n  }) => void;\n  setSendDialogOpen: (isOpen: boolean) => void;\n  setDepositDialogOpen: (isOpen: boolean) => void;\n  setShowAddTokenDialog: (isOpen: boolean) => void;\n  setCloseTokenAccountDialogOpen: (isOpen: boolean) => void;\n}) => {\n  const theme = useTheme();\n  const wallet = useWallet();\n  const walletPubkey = wallet?.publicKey?.toString();\n\n  const sortedPublicKeys = useMemo(\n    () =>\n      [...allTokensData.values()].sort((tokenA, tokenB) => {\n        if ((!tokenA && !tokenB) || !walletPubkey) return 0;\n        if (!tokenA) return 1;\n        if (!tokenB) return -1;\n\n        const isTokenAUSDT = isUSDToken(tokenA.symbol);\n        const isTokenBUSDT = isUSDToken(tokenB.symbol);\n\n        let tokenAPrice = tokensData.get(`${tokenA.symbol}`) || 0;\n        if (isTokenAUSDT) tokenAPrice = 1;\n        let tokenBPrice = tokensData.get(`${tokenB.symbol}`) || 0;\n        if (isTokenBUSDT) tokenBPrice = 1;\n\n        const aVal = tokenA.amount * tokenAPrice;\n        const bVal = tokenB.amount * tokenBPrice;\n\n        // SOL always fisrt\n        if (new PublicKey(tokenA.address).equals(new PublicKey(walletPubkey)))\n          return -1;\n        if (new PublicKey(tokenB.address).equals(new PublicKey(walletPubkey)))\n          return 1;\n\n        // CCAI always second\n        // if (new PublicKey(tokenA.mint).equals(CCAI_MINT)) return -1;\n        // if (new PublicKey(tokenB.mint).equals(CCAI_MINT)) return 1;\n\n        const totalA = aVal === undefined || aVal === null ? -1 : aVal;\n        const totalB = bVal === undefined || bVal === null ? -1 : bVal;\n\n        if (totalB < totalA) {\n          return -1;\n        } else if (totalB > totalA) {\n          return 1;\n        } else {\n          return tokenA.symbol.localeCompare(tokenB.symbol);\n        }\n      }),\n    [allTokensData, walletPubkey, tokensData],\n  );\n\n  return (\n    <TableContainer\n      theme={theme}\n      width=\"calc(85% - 1rem)\"\n      direction=\"column\"\n      justify={'flex-start'}\n      isActive={isActive}\n    >\n      <MainHeaderRow theme={theme}>\n        <HeadRow\n          theme={theme}\n          justify=\"flex-start\"\n          style={{ width: '80%', padding: '1.4rem 0 1.4rem 2.4rem' }}\n        >\n          <GreyTitle theme={theme}>Assets</GreyTitle>\n        </HeadRow>\n        <HeadRow theme={theme}>\n          <AddTokenButtonContainer>\n            <AddTokenButton\n              setShowAddTokenDialog={setShowAddTokenDialog}\n              theme={theme}\n            />\n          </AddTokenButtonContainer>\n        </HeadRow>\n        <HeadRow theme={theme}>\n          <RefreshButton\n            textTransform={'capitalize'}\n            borderWidth=\"0\"\n            height={'100%'}\n            padding={'1.2rem 0'}\n            onClick={refreshTokensData}\n          >\n            <img\n              src={RefreshIcon}\n              alt=\"refreshIcon\"\n              style={{ marginRight: '1rem' }}\n            />\n            <GreyTitle theme={theme}>Refresh</GreyTitle>\n          </RefreshButton>\n        </HeadRow>\n      </MainHeaderRow>\n      <RowContainer\n        style={{ display: 'block', overflowY: 'auto' }}\n        height=\"calc(100% - 5rem)\"\n      >\n        <StyledTable theme={theme}>\n          <tbody>\n            {sortedPublicKeys.map((balanceInfo, i) => (\n              <AssetItem\n                key={`${balanceInfo.address}-${i}-table`}\n                publicKey={new PublicKey(balanceInfo.address)}\n                theme={theme}\n                tokensData={tokensData}\n                balanceInfo={balanceInfo}\n                selectToken={selectToken}\n                setSendDialogOpen={setSendDialogOpen}\n                setDepositDialogOpen={setDepositDialogOpen}\n                setCloseTokenAccountDialogOpen={setCloseTokenAccountDialogOpen}\n              />\n            ))}\n            {sortedPublicKeys.length === 0 && (\n              <Loading\n                color={'#651CE4'}\n                style={{ padding: '2rem 0 2rem 4.8rem' }}\n              />\n            )}\n            <StyledTr disableHover theme={theme} style={{ width: '100%' }}>\n              <LastStyledTd colSpan={2}>\n                <AddTokenBtnRow>\n                  <AddTokenButton\n                    setShowAddTokenDialog={setShowAddTokenDialog}\n                    theme={theme}\n                  />\n                </AddTokenBtnRow>\n              </LastStyledTd>\n            </StyledTr>\n          </tbody>\n        </StyledTable>\n      </RowContainer>\n    </TableContainer>\n  );\n};\n\nconst AssetItem = ({\n  theme,\n  publicKey,\n  selectToken,\n  setSendDialogOpen,\n  setDepositDialogOpen,\n  setCloseTokenAccountDialogOpen,\n  tokensData = new Map(),\n  balanceInfo,\n}: {\n  publicKey: PublicKey;\n  theme: Theme;\n  tokensData: Map<string, number>;\n  balanceInfo?: TokenInfo;\n  selectToken: ({\n    publicKey,\n    isAssociatedToken,\n  }: {\n    publicKey: PublicKey;\n    isAssociatedToken: boolean;\n  }) => void;\n  setSendDialogOpen: (isOpen: boolean) => void;\n  setDepositDialogOpen: (isOpen: boolean) => void;\n  setCloseTokenAccountDialogOpen: (isOpen: boolean) => void;\n}) => {\n  const wallet = useWallet();\n  const urlSuffix = useSolanaExplorerUrlSuffix();\n\n  let {\n    amount,\n    mint,\n    name: tokenName,\n    symbol: tokenSymbol,\n    tokenLogoUri,\n  } = balanceInfo || {\n    amount: 0,\n    mint: '',\n    name: 'Loading...',\n    symbol: '--',\n    tokenLogoUri: undefined,\n  };\n\n  if (tokenSymbol === 'CCAI') {\n    tokenSymbol = 'RIN';\n  }\n\n  if (tokenName === 'Cryptocurrencies.Ai') {\n    tokenName = 'SVMSeek';\n  }\n\n  // Fetch and cache the associated token address.\n  if (wallet && wallet.publicKey && mint) {\n    if (\n      associatedTokensCache[wallet.publicKey.toString()] === undefined ||\n      associatedTokensCache[wallet.publicKey.toString()][mint] === undefined\n    ) {\n      findAssociatedTokenAddress(wallet.publicKey, new PublicKey(mint)).then(\n        (assocTok) => {\n          let walletAccounts = Object.assign(\n            {},\n            associatedTokensCache[wallet.publicKey.toString()],\n          );\n          walletAccounts[mint] = assocTok;\n          associatedTokensCache[wallet.publicKey.toString()] = walletAccounts;\n        },\n      );\n    }\n  }\n\n  let closePrice = tokensData?.get(`${tokenSymbol?.toUpperCase()}`) || 0;\n\n  let priceForCalculate = closePrice;\n\n  if (isUSDToken(tokenSymbol)) {\n    priceForCalculate = 1;\n  }\n\n  const quote = 'USDC';\n\n  const usdValue =\n    priceForCalculate === undefined // Not yet loaded.\n      ? undefined\n      : priceForCalculate === null // Loaded and empty.\n      ? null\n      : +(amount * priceForCalculate).toFixed(2); // Loaded.\n\n  let isAssociatedToken = mint ? false : false;\n\n  if (\n    wallet &&\n    wallet.publicKey &&\n    mint &&\n    associatedTokensCache[wallet.publicKey.toString()]\n  ) {\n    let acc =\n      associatedTokensCache[wallet.publicKey.toString()][mint.toString()];\n    if (acc) {\n      if (acc.equals(publicKey)) {\n        isAssociatedToken = true;\n      } else {\n        isAssociatedToken = false;\n      }\n    }\n  }\n\n  return (\n    <StyledTr key={`${publicKey}`} theme={theme}>\n      <StyledTd>\n        <ValuesContainer justify=\"flex-start\">\n          <Row margin=\"0 1rem 0 0\">\n            <TokenIcon\n              tokenLogoUri={tokenLogoUri}\n              mint={mint}\n              tokenName={tokenName}\n              size={'3.6rem'}\n            />\n          </Row>\n          <Row direction=\"column\">\n            <RowContainer justify=\"flex-start\">\n              <AssetSymbol>\n                {tokenSymbol && tokenSymbol.length > 16\n                  ? tokenSymbol.slice(0, 16) + '...'\n                  : tokenSymbol}\n              </AssetSymbol>\n              <AssetName theme={theme}>\n                {tokenName && tokenName.length > 32\n                  ? tokenName.slice(0, 32) + '...'\n                  : tokenName}\n              </AssetName>\n            </RowContainer>\n            <RowContainer justify=\"flex-start\">\n              <AssetAmount theme={theme}>{`${stripDigitPlaces(\n                amount,\n                8,\n              )} ${tokenSymbol}`}</AssetAmount>\n            </RowContainer>\n          </Row>\n        </ValuesContainer>\n        <ValuesContainerForExtension>\n          <Row margin=\"0 1rem 0 0\">\n            <TokenIcon\n              tokenLogoUri={tokenLogoUri}\n              mint={mint}\n              tokenName={tokenName}\n              size={'3.6rem'}\n            />\n          </Row>\n          <Row direction=\"column\">\n            <RowContainer justify=\"flex-start\">\n              <AssetAmountUSD theme={theme}>{` $${stripDigitPlaces(\n                usdValue || 0,\n                2,\n              )}`}</AssetAmountUSD>\n            </RowContainer>\n            <RowContainer justify=\"flex-start\">\n              <AssetAmount theme={theme}>{`${stripDigitPlaces(\n                amount,\n                8,\n              )} ${tokenSymbol}`}</AssetAmount>\n            </RowContainer>\n          </Row>\n        </ValuesContainerForExtension>\n      </StyledTd>\n\n      <StyledTd style={{ paddingRight: '2rem' }}>\n        <RowContainer direction=\"column\" align=\"flex-start\">\n          <GreyTitle theme={theme}>Total:</GreyTitle>\n          <AssetAmountUSD theme={theme}>\n            {priceForCalculate\n              ? ` $${stripDigitPlaces(amount * priceForCalculate || 0, 2)}`\n              : '-'}\n          </AssetAmountUSD>\n        </RowContainer>\n      </StyledTd>\n      {/* <StyledTd style={{ paddingRight: '2rem' }}>\n        <RowContainer direction=\"column\" align=\"flex-start\">\n          <GreyTitle theme={theme}>P&L 24h:</GreyTitle>\n          <Title fontSize=\"1.4rem\" fontFamily=\"Avenir Next Demi\">\n            Soon\n          </Title>\n        </RowContainer>\n      </StyledTd> */}\n      <StyledTd>\n        <RowContainer direction=\"column\" align=\"flex-start\">\n          <GreyTitle theme={theme}>Price</GreyTitle>\n          <Title fontSize=\"1.4rem\" fontFamily=\"Avenir Next Demi\">\n            {priceForCalculate\n              ? `$\n            ${formatNumberToUSFormat(\n              stripDigitPlaces(\n                priceForCalculate || 0,\n                priceForCalculate < 1 ? 8 : 2,\n              ),\n            )}`\n              : '-'}\n          </Title>\n        </RowContainer>\n      </StyledTd>\n      {/* <StyledTd>\n        <RowContainer direction=\"column\" align=\"flex-start\">\n          <GreyTitle theme={theme}>Change 24h:</GreyTitle>\n          <RowContainer justify=\"flex-start\">\n            <Title fontSize=\"1.4rem\" color={color}>\n              {!priceChangePercentage\n                ? '0%'\n                : `${sign24hChange}${formatNumberToUSFormat(\n                    stripDigitPlaces(Math.abs(priceChangePercentage), 2),\n                  )}% `}\n              &nbsp;\n            </Title>\n            <Title fontSize=\"1.4rem\">/</Title>&nbsp;\n            <Title\n              color={color}\n              fontSize=\"1.4rem\"\n              fontFamily=\"Avenir Next Demi\"\n            >\n              {` ${sign24hChange}$${formatNumberToUSFormat(\n                stripDigitPlaces(Math.abs(lastPriceDiff), 2),\n              )}`}\n            </Title>\n          </RowContainer>\n        </RowContainer>\n      </StyledTd> */}\n      <StyledTd>\n        <RowContainer justify=\"flex-end\">\n          <VioletButton\n            theme={theme}\n            height=\"50%\"\n            width=\"10rem\"\n            background={'linear-gradient(135deg, #53DF11 0%, #97E873 100%)'}\n            color={theme.customPalette.dark.background}\n            hoverColor={theme.customPalette.white.main}\n            hoverBackground={\n              'linear-gradient(135deg, #53DF11 0%, #97E873 100%)'\n            }\n            margin=\"0 2rem 0 0\"\n            onClick={() => {\n              selectToken({ publicKey, isAssociatedToken });\n              setDepositDialogOpen(true);\n            }}\n          >\n            <img\n              src={ReceiveIcon}\n              alt=\"receive\"\n              style={{ marginRight: '.5rem' }}\n            />\n            <span>Receive</span>\n          </VioletButton>\n\n          <VioletButton\n            theme={theme}\n            height=\"50%\"\n            width=\"7rem\"\n            background={\n              'linear-gradient(140.41deg, #F26D68 0%, #F69894 92.17%)'\n            }\n            hoverBackground={\n              'linear-gradient(140.41deg, #F26D68 0%, #F69894 92.17%)'\n            }\n            margin=\"0 2rem 0 0\"\n            onClick={() => {\n              selectToken({ publicKey, isAssociatedToken });\n              setSendDialogOpen(true);\n            }}\n          >\n            <img src={SendIcon} alt=\"send\" style={{ marginRight: '.5rem' }} />\n            Send\n          </VioletButton>\n\n          {false && mint && amount === 0 && (\n            <VioletButton\n              theme={theme}\n              height=\"50%\"\n              width=\"7rem\"\n              background={\n                'linear-gradient(140.41deg, #F26D68 0%, #F69894 92.17%)'\n              }\n              hoverBackground={\n                'linear-gradient(140.41deg, #F26D68 0%, #F69894 92.17%)'\n              }\n              margin=\"0 2rem 0 0\"\n              onClick={() => {\n                selectToken({ publicKey, isAssociatedToken });\n                setCloseTokenAccountDialogOpen(true);\n              }}\n            >\n              <img src={SendIcon} alt=\"send\" style={{ marginRight: '.5rem' }} />\n              Delete\n            </VioletButton>\n          )}\n\n          <VioletButton\n            theme={theme}\n            component=\"a\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            href={\n              `https://solanabeach.io/address/${publicKey.toBase58()}` +\n              urlSuffix\n            }\n            height=\"50%\"\n            width=\"14rem\"\n            margin=\"0 2rem 0 0\"\n          >\n            <img\n              src={ExplorerIcon}\n              alt=\"Explorer Icon\"\n              style={{ marginRight: '.5rem' }}\n            />\n            View Explorer\n          </VioletButton>\n          <VioletButton\n            theme={theme}\n            component=\"a\"\n            target=\"_blank\"\n            disabled={\n              !tokensData ||\n              (!tokensData.has(`${tokenSymbol?.toUpperCase()}`) &&\n                !tokensData.has(`${tokenSymbol?.toUpperCase()}`)) ||\n              tokenSymbol === 'USDC'\n            }\n            rel=\"noopener\"\n            href={`https://svmseek.com/chart/spot/${tokenSymbol?.toUpperCase()}_${quote}#connect_wallet`}\n            height=\"50%\"\n            width=\"7rem\"\n            margin=\"0 2rem 0 0\"\n          >\n            Trade\n          </VioletButton>\n\n          {/* <VioletButton\n            theme={theme}\n            height=\"50%\"\n            width=\"7rem\"\n            margin=\"0 2rem 0 0\"\n          >\n            Swap\n          </VioletButton> */}\n        </RowContainer>\n      </StyledTd>\n      <StyledTdMenu style={{ textAlign: 'end', cursor: 'pointer' }}>\n        <DropdownContainer>\n          <img alt={'open menu'} src={Dots} />\n          <ActivitiesDropdown\n            urlSuffix={urlSuffix}\n            selectToken={() => selectToken({ publicKey, isAssociatedToken })}\n            setSendDialogOpen={setSendDialogOpen}\n            setDepositDialogOpen={setDepositDialogOpen}\n            publicKey={publicKey}\n            tokensData={tokensData}\n            tokenSymbol={tokenSymbol}\n            theme={theme}\n            quote={quote}\n          />\n        </DropdownContainer>\n      </StyledTdMenu>\n    </StyledTr>\n  );\n};\n\nexport default React.memo(AssetsTable, (prev, next) => {\n  return (\n    prev.isActive === next.isActive &&\n    JSON.stringify([...prev.allTokensData.values()]) ===\n      JSON.stringify([...next.allTokensData.values()]) &&\n    JSON.stringify([...prev.tokensData.values()]) ===\n      JSON.stringify([...next.tokensData.values()])\n  );\n});\n","import React, { useEffect, useState } from 'react';\nimport Web3 from 'web3';\nimport ERC20_ABI from './erc20-abi.json';\nimport SWAP_ABI from './swap-abi.json';\nimport { useCallAsync } from '../notifications';\nimport { VioletButton } from '../../pages/commonStyles';\nimport { useTheme } from '@mui/material';\nimport { isExtension } from '../utils';\n\nconst web3 = new Web3(window.ethereum);\n// Change to use estimated gas limit\nconst SUGGESTED_GAS_LIMIT = 200000;\n\nexport function useEthAccount() {\n  const [account, setAccount] = useState(null);\n\n  useEffect(() => {\n    if (!window.ethereum) {\n      return;\n    }\n    const onChange = (accounts) =>\n      setAccount(accounts.length > 0 ? accounts[0] : null);\n    window.ethereum.request({ method: 'eth_accounts' }).then(onChange);\n    window.ethereum.on('accountsChanged', onChange);\n    return () => { \n      if (!window.ethereum) {\n        window.ethereum.removeListener('accountsChanged', onChange);\n      }\n    }\n  }, []);\n\n  return account;\n}\n\nexport async function getErc20Balance(account, erc20Address) {\n  if (!erc20Address) {\n    return parseInt(await web3.eth.getBalance(account)) / 1e18;\n  }\n\n  const erc20 = new web3.eth.Contract(ERC20_ABI, erc20Address);\n  const [value, decimals] = await Promise.all([\n    erc20.methods.balanceOf(account).call(),\n    erc20.methods.decimals().call(),\n  ]);\n  return parseInt(value, 10) / 10 ** parseInt(decimals, 10);\n}\n\nexport async function estimateErc20SwapFees({\n  erc20Address,\n  swapAddress,\n  ethAccount,\n}) {\n  if (!erc20Address) {\n    return estimateEthSwapFees({ swapAddress });\n  }\n\n  const erc20 = new web3.eth.Contract(ERC20_ABI, erc20Address);\n  const decimals = parseInt(await erc20.methods.decimals().call(), 10);\n\n  const approveAmount = addDecimals('100000000', decimals);\n\n  let approveEstimatedGas = await erc20.methods\n    .approve(swapAddress, approveAmount)\n    .estimateGas({ from: ethAccount });\n  // Account for Metamask over-estimation\n  approveEstimatedGas *= 1.5;\n\n  // Use estimated gas limit for now\n  const swapEstimatedGas = SUGGESTED_GAS_LIMIT;\n\n  const gasPrice = (await web3.eth.getGasPrice()) * 1e-18;\n\n  return [approveEstimatedGas * gasPrice, swapEstimatedGas * gasPrice];\n}\n\nexport async function estimateEthSwapFees() {\n  const estimatedGas = SUGGESTED_GAS_LIMIT;\n\n  const gasPrice = (await web3.eth.getGasPrice()) * 1e-18;\n\n  return estimatedGas * gasPrice;\n}\n\nexport async function swapErc20ToSpl({\n  ethAccount,\n  erc20Address,\n  swapAddress,\n  destination,\n  amount, // string\n  onStatusChange,\n}) {\n  if (!erc20Address) {\n    return swapEthToSpl({\n      ethAccount,\n      swapAddress,\n      destination,\n      amount,\n      onStatusChange,\n    });\n  }\n\n  const erc20 = new web3.eth.Contract(ERC20_ABI, erc20Address);\n  const swap = new web3.eth.Contract(SWAP_ABI, swapAddress);\n  const decimals = parseInt(await erc20.methods.decimals().call(), 10);\n\n  const encodedAmount = addDecimals(amount, decimals);\n\n  const approveTx = erc20.methods\n    .approve(swapAddress, encodedAmount)\n    .send({ from: ethAccount });\n  await waitForTxid(approveTx);\n\n  onStatusChange({ step: 1 });\n\n  const swapTx = swap.methods\n    .swapErc20(erc20Address, destination, encodedAmount)\n    .send({ from: ethAccount, gasLimit: SUGGESTED_GAS_LIMIT });\n  const swapTxid = await waitForTxid(swapTx);\n\n  onStatusChange({ step: 2, txid: swapTxid, confirms: 0 });\n\n  await Promise.all([\n    approveTx,\n    swapTx,\n    waitForConfirms(swapTx, onStatusChange),\n  ]);\n\n  onStatusChange({ step: 3 });\n}\n\nexport async function swapEthToSpl({\n  ethAccount,\n  swapAddress,\n  destination,\n  amount,\n  onStatusChange,\n}) {\n  const swap = new web3.eth.Contract(SWAP_ABI, swapAddress);\n\n  const encodedAmount = addDecimals(amount, 18);\n  const swapTx = swap.methods\n    .swapEth(destination)\n    .send({ from: ethAccount, value: encodedAmount });\n  const swapTxid = await waitForTxid(swapTx);\n\n  onStatusChange({ step: 2, txid: swapTxid, confirms: 0 });\n\n  await Promise.all([swapTx, waitForConfirms(swapTx, onStatusChange)]);\n\n  onStatusChange({ step: 3 });\n}\n\nfunction addDecimals(str, decimals) {\n  if (!/^\\d*\\.?\\d*$/.test(str)) {\n    throw new Error('Invalid number');\n  }\n  if (!str.includes('.')) {\n    str += '.';\n  }\n  let [intStr, fractionStr] = str.split('.');\n  if (fractionStr.length > decimals) {\n    fractionStr = fractionStr.slice(0, decimals);\n  } else {\n    fractionStr += '0'.repeat(decimals - fractionStr.length);\n  }\n  return (intStr + fractionStr).replace(/^0+/, '') || '0';\n}\n\nconst pendingNonces = new Set();\n\nexport async function withdrawEth(from, withdrawal, callAsync) {\n  const { params, signature } = withdrawal.txData;\n  const swap = new web3.eth.Contract(SWAP_ABI, params[1]);\n  let method, nonce;\n  if (params[0] === 'withdrawErc20') {\n    method = swap.methods.withdrawErc20(\n      params[2],\n      params[3],\n      params[4],\n      params[5],\n      signature,\n    );\n    nonce = params[5];\n  } else if (params[0] === 'withdrawEth') {\n    method = swap.methods.withdrawEth(\n      params[2],\n      params[3],\n      params[4],\n      signature,\n    );\n    nonce = params[4];\n  } else {\n    return;\n  }\n  if (pendingNonces.has(nonce)) {\n    return;\n  }\n  try {\n    await method.estimateGas();\n  } catch (e) {\n    return;\n  }\n  pendingNonces.add(nonce);\n  await callAsync(method.send({ from, gasLimit: SUGGESTED_GAS_LIMIT }), {\n    progressMessage: `Completing ${withdrawal.coin.ticker} transfer...`,\n  });\n  pendingNonces.delete(nonce);\n}\n\nfunction waitForTxid(tx) {\n  return new Promise((resolve, reject) => {\n    tx.once('transactionHash', resolve).catch(reject);\n  });\n}\n\nfunction waitForConfirms(tx, onStatusChange) {\n  return new Promise((resolve, reject) => {\n    let resolved = false;\n    tx.on('confirmation', (confirms, receipt) => {\n      if (!resolved) {\n        onStatusChange({ confirms: confirms + 1 });\n        if (!receipt.status) {\n          reject('Transaction failed');\n          resolved = true;\n        } else if (confirms >= 11) {\n          resolve();\n          resolved = true;\n        }\n      }\n    });\n  });\n}\n\nexport function ConnectToMetamaskButton() {\n  const callAsync = useCallAsync();\n  const theme = useTheme()\n\n  if (!window.ethereum) {\n    return (\n      <VioletButton\n        theme={theme}\n        component=\"a\"\n        href={isExtension ? 'http://svmseek.com/' : 'https://metamask.io/'}\n        target=\"_blank\"\n        rel=\"noopener\"\n        width={'calc(50% - .5rem)'}\n      >\n        {isExtension ? 'Open SVMSeek Wallet' : 'Connect to MetaMask'}\n      </VioletButton>\n    );\n  }\n\n  function connect() {\n    callAsync(\n      window.ethereum.request({\n        method: 'eth_requestAccounts',\n      }),\n      {\n        progressMessage: 'Connecting to MetaMask...',\n        successMessage: 'Connected to MetaMask',\n      },\n    );\n  }\n\n  return (\n    <VioletButton theme={theme} width={'calc(50% - .5rem)'} onClick={connect}>\n      Connect to MetaMask\n    </VioletButton>\n  );\n}\n","import { MARKETS } from '@project-serum/serum';\nimport { PublicKey } from '@solana/web3.js';\nimport { MAINNET_URL } from './connection';\n\ninterface Markets {\n  [coin: string]: {\n    publicKey: PublicKey;\n    name: string;\n    deprecated?: boolean;\n  }\n}\n\nexport const serumMarkets = (() => {\n  const m: Markets = {};\n  MARKETS.forEach((market) => {\n    const coin = market.name.split('/')[0];\n    if (m[coin]) {\n      // Only override a market if it's not deprecated\t.\n      if (!m.deprecated) {\n        m[coin] = {\n          publicKey: market.address,\n          name: market.name.split('/').join(''),\n        };\n      }\n    } else {\n      m[coin] = {\n        publicKey: market.address,\n        name: market.name.split('/').join(''),\n      };\n    }\n  });\n  return m;\n})();\n\n// Create a cached API wrapper to avoid rate limits.\nclass PriceStore {\n  public cache: {}\n\n  constructor() {\n    this.cache = {};\n  }\n\n  public getFromCache(marketName: string) {\n    return this.cache[marketName]\n  }\n\n  public async getPrice(connection, marketName): Promise<number | undefined | null> {\n    return new Promise((resolve, reject) => {\n      if (connection._rpcEndpoint !== MAINNET_URL) {\n        resolve(null);\n        return;\n      }\n      if (this.cache[marketName] === undefined) {\n        let CORS_PROXY = \"https://ancient-peak-37978.herokuapp.com/\"\n        fetch(`${CORS_PROXY}https://serum-api.bonfida.com/orderbooks/${marketName}`).then(\n          (resp) => {\n            resp.json().then((resp) => {\n              if (!resp || !resp.data || !resp.data.asks || !resp.data.bids) {\n                resolve(null)\n                return\n              }\n\n              if (resp.data.asks.length === 0 && resp.data.bids.length === 0) {\n                resolve(null);\n              } else if (resp.data.asks.length === 0) {\n                resolve(resp.data.bids[0].price);\n              } else if (resp.data.bids.length === 0) {\n                resolve(resp.data.asks[0].price);\n              } else {\n                const mid =\n                  (resp.data.asks[0].price + resp.data.bids[0].price) / 2.0;\n                this.cache[marketName] = mid;\n                resolve(this.cache[marketName]);\n              }\n            });\n          },\n        ).catch(e => {\n          resolve(null)\n        });\n      } else {\n        return resolve(this.cache[marketName]);\n      }\n    });\n  }\n}\n\nexport const priceStore = new PriceStore();\n","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgImportHardware(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 10,\n    height: 17,\n    viewBox: \"0 0 10 17\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M4.71726 0.956025L2.17168 3.50161C2.01547 3.65782 2.01547 3.91109 2.17168 4.0673C2.32789 4.22351 2.58115 4.22351 2.73736 4.0673L4.60011 2.20455L4.60011 10.0522H1.44043V7.89814C1.77187 7.73528 2 7.39433 2 7.0001C2 6.44781 1.55228 6.0001 1 6.0001C0.447715 6.0001 0 6.44781 0 7.0001C0 7.34508 0.174687 7.64926 0.44043 7.829V10.5522V11.0522H0.94043H4.60011V13.221C3.73703 13.4049 3.08967 14.1716 3.08967 15.0895C3.08967 16.1446 3.945 17 5.00011 17C6.05521 17 6.91054 16.1446 6.91054 15.0895C6.91054 14.1716 6.26318 13.4049 5.40011 13.221V11.0522H9.05978H9.55978V10.5522V8.0001H10V6.0001H8V8.0001H8.55978V10.0522H5.40011L5.40011 2.20455L7.26285 4.0673C7.41906 4.22351 7.67232 4.22351 7.82853 4.06729C7.98474 3.91108 7.98474 3.65782 7.82853 3.50161L5.28295 0.956025C5.12674 0.799815 4.87347 0.799815 4.71726 0.956025Z\",\n    fill: \"#651CE4\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgImportHardware);\nexport default __webpack_public_path__ + \"static/media/importHardware.78b5242a1cb4a08c68ffa9405d390364.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgExportMnemonic(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 17,\n    height: 16,\n    viewBox: \"0 0 17 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M3.32843 0.146446L0.146447 3.32843C-0.0488155 3.52369 -0.0488155 3.84027 0.146447 4.03553C0.341709 4.2308 0.658291 4.2308 0.853554 4.03553L3.18198 1.70711L3.18198 15.3571H4.18198L4.18198 1.70711L6.51041 4.03553C6.70567 4.2308 7.02225 4.2308 7.21751 4.03553C7.41278 3.84027 7.41278 3.52369 7.21751 3.32843L4.03553 0.146446C3.84027 -0.0488157 3.52369 -0.0488157 3.32843 0.146446ZM13.0355 15.7107L16.2175 12.5287C16.4128 12.3335 16.4128 12.0169 16.2175 11.8216C16.0223 11.6264 15.7057 11.6264 15.5104 11.8216L13.182 14.15L13.182 0.500001H12.182L12.182 14.15L9.85355 11.8216C9.65829 11.6264 9.34171 11.6264 9.14645 11.8216C8.95119 12.0169 8.95119 12.3335 9.14645 12.5287L12.3284 15.7107C12.5237 15.906 12.8403 15.906 13.0355 15.7107Z\",\n    fill: \"#651CE4\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgExportMnemonic);\nexport default __webpack_public_path__ + \"static/media/exportMnemonic.79e54b431f5fecf7957045f9d3a8df7e.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgDeleteAccount(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 17,\n    viewBox: \"0 0 18 17\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M0.87931 0H0.37931V0.5V5.18966H1.37931V1H16.2069V15.8276H1.37931V11.6379H0.37931V16.3276V16.8276H0.87931H16.7069H17.2069V16.3276V0.5V0H16.7069H0.87931ZM11.4915 8.06024L8.3095 4.87826C8.11424 4.683 7.79766 4.683 7.6024 4.87826C7.40714 5.07352 7.40714 5.3901 7.6024 5.58537L9.93083 7.91379H0V8.91379H9.93083L7.6024 11.2422C7.40714 11.4375 7.40714 11.7541 7.6024 11.9493C7.79766 12.1446 8.11424 12.1446 8.3095 11.9493L11.4915 8.76735C11.6867 8.57208 11.6867 8.2555 11.4915 8.06024Z\",\n    fill: \"#651CE4\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgDeleteAccount);\nexport default __webpack_public_path__ + \"static/media/deleteAccount.2e6db3c8edb628d1218093dc6ac1c372.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgMerge(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 14,\n    height: 17,\n    viewBox: \"0 0 14 17\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M10.3808 3.74212L7.47757 0.838867H6.52109L3.61649 3.74212L4.57296 4.69859L6.05165 3.22126V4.59983H6.02459V5.21674L6.05841 5.21809L6.06653 5.64966C6.07194 5.90264 6.09358 6.16239 6.13417 6.4262C6.17476 6.69001 6.22752 6.95382 6.29246 7.21898C6.35739 7.48279 6.44668 7.76554 6.56303 8.06723C6.77272 8.57996 7.02706 9.044 7.3274 9.46203C7.62638 9.88007 7.94972 10.271 8.2947 10.635C8.63968 11.0002 8.98195 11.3587 9.32288 11.7132C9.66109 12.0677 9.96954 12.4451 10.2442 12.8469C10.5188 13.2487 10.742 13.687 10.9125 14.1632C11.0816 14.6381 11.1668 15.1847 11.1668 15.8043V17.0002H13.0865V15.8043C13.0854 15.1708 13.0101 14.5397 12.862 13.9238C12.7336 13.4052 12.5394 12.9051 12.2843 12.4356C12.0498 12.0069 11.7763 11.6006 11.4672 11.2221C11.1668 10.8568 10.8543 10.5091 10.5296 10.175C10.2049 9.84219 9.89243 9.50938 9.59209 9.17658C9.29265 8.84425 9.01945 8.48919 8.77496 8.11458C8.52539 7.73039 8.32838 7.31453 8.18917 6.87806C8.03787 6.38286 7.96484 5.86706 7.97271 5.34932V4.59983H7.97136V3.24697L9.42434 4.69995L10.3808 3.74212ZM5.70261 10.635C5.85596 10.4731 6.00439 10.3066 6.1477 10.1358C5.81286 9.6489 5.53163 9.12727 5.30892 8.57996L5.29945 8.5502C5.25433 8.43244 5.21148 8.31381 5.17093 8.1944C4.94094 8.54073 4.68525 8.86812 4.40656 9.17658C4.10623 9.50938 3.79371 9.84219 3.46902 10.175C3.14434 10.5091 2.83318 10.8568 2.53149 11.2221C2.23251 11.5874 1.95923 11.9905 1.71436 12.4343C1.45908 12.9046 1.26495 13.4056 1.13669 13.9251C0.988753 14.5406 0.913381 15.1713 0.912109 15.8043V17.0002H2.83318V15.8043C2.83318 15.186 2.91706 14.6381 3.08752 14.1632C3.25663 13.687 3.47985 13.2487 3.75448 12.8469C4.02911 12.4451 4.33621 12.0677 4.67713 11.7132C5.0167 11.3587 5.35898 11.0002 5.70531 10.635H5.70261Z\",\n    fill: \"#651CE4\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgMerge);\nexport default __webpack_public_path__ + \"static/media/merge.6a9659db23e1ca648b323a691e52f30f.svg\";\nexport { ForwardRef as ReactComponent };","var _circle, _circle2;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgConnections(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 9.0003,\n    cy: 8.99981,\n    r: 2.05303,\n    stroke: \"#651CE4\",\n    strokeWidth: 4\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 9.00049,\n    cy: 9,\n    r: 7.08057,\n    stroke: \"#651CE4\",\n    strokeWidth: 2\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgConnections);\nexport default __webpack_public_path__ + \"static/media/connections.c8c376b60a30e74fdec2b73e97bb5e86.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react';\nimport { Account } from '@solana/web3.js';\nimport DialogForm from './DialogForm';\nimport {\n  Input,\n  RowContainer,\n  StyledCheckbox,\n  StyledLabel,\n  Title,\n  VioletButton,\n  WhiteButton,\n} from '../../commonStyles';\nimport { useTheme } from '@mui/material';\nimport { InputWithPaste } from '../../../components/Input';\nimport FakeInputs from '../../../components/FakeInputs';\n\nexport default function AddAccountDialog({ open, onAdd, onClose }) {\n  const [name, setName] = useState('');\n  const [isImport, setIsImport] = useState(false);\n  const [importedPrivateKey, setPrivateKey] = useState('');\n\n  const importedAccount = isImport\n    ? decodeAccount(importedPrivateKey)\n    : undefined;\n\n  const isDisabled = isImport ? !name || !importedAccount || name.length > 16 : !name || name.length > 16;\n\n  const theme = useTheme();\n  const submit = () => onAdd({ name, importedAccount })\n\n  const handleKeyDown = (event: any) => {\n    if (event.key === 'Enter' && !isDisabled) {\n      submit();\n    }\n  };\n\n  return (\n    <DialogForm\n      height=\"auto\"\n      padding=\"2rem 0\"\n      open={open}\n      onEnter={() => {\n        setName('');\n        setIsImport(false);\n        setPrivateKey('');\n      }}\n      onClose={onClose}\n      fullWidth\n    >\n      <FakeInputs />\n      <RowContainer>\n        <Title fontSize=\"2rem\">Add account</Title>\n      </RowContainer>\n      <RowContainer width=\"90%\" direction=\"column\">\n        <RowContainer direction=\"column\">\n          <RowContainer margin=\"2rem 0\">\n            <Input\n              placeholder=\"Name\"\n              value={name}\n              onKeyDown={handleKeyDown}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </RowContainer>\n          {name.length > 16 && (\n              <RowContainer width=\"90%\" margin=\"2rem 0 0 0\">\n                <Title color={theme.customPalette.red.main}>\n                  Sorry, your account name shouldn't be longer than 16 symbols\n                </Title>\n              </RowContainer>\n            )}\n          <RowContainer justify=\"flex-start\">\n            <StyledCheckbox\n              theme={theme}\n              id={'isImport'}\n              checked={isImport}\n              onChange={() => setIsImport(!isImport)}\n            />\n            <StyledLabel htmlFor=\"isImport\">Import private key</StyledLabel>\n          </RowContainer>\n          {isImport && (\n            <RowContainer margin=\"2rem 0 0 0\">\n              <InputWithPaste\n                placeholder=\"Paste your private key here\"\n                type=\"password\"\n                value={importedPrivateKey}\n                onKeyDown={handleKeyDown}\n                containerStyle={{ width: '100%' }}\n                onChange={(e) => setPrivateKey(e.target.value)}\n                onPasteClick={() =>\n                  navigator.clipboard\n                    .readText()\n                    .then((clipText) => setPrivateKey(clipText))\n                }\n              />\n            </RowContainer>\n          )}\n        </RowContainer>\n        <RowContainer justify=\"space-between\" margin=\"2rem 0 0 0\">\n          <WhiteButton theme={theme} onClick={onClose}>\n            Close\n          </WhiteButton>\n          <VioletButton\n            theme={theme}\n            type=\"submit\"\n            color=\"primary\"\n            disabled={isDisabled}\n            onClick={() => submit()}\n          >\n            Add\n          </VioletButton>\n        </RowContainer>\n      </RowContainer>\n    </DialogForm>\n  );\n}\n\n/**\n * Returns an account object when given the private key\n *\n * @param {string} privateKey - the private key in array format\n */\nfunction decodeAccount(privateKey) {\n  try {\n    const a = new Account(JSON.parse(privateKey));\n    return a;\n  } catch (_) {\n    return undefined;\n  }\n}\n","import React, { useRef } from 'react';\nimport { TextField } from '@mui/material';\nimport CopyIcon from 'mdi-material-ui/ContentCopy';\nimport { makeStyles } from '@mui/material/styles';\nimport { useSnackbar } from 'notistack';\nimport QrcodeIcon from 'mdi-material-ui/Qrcode';\nimport { QRCodeSVG as QRCode } from 'qrcode.react';\nimport DialogContent from '@mui/material/DialogContent';\nimport IconButton from '@mui/material/IconButton';\nimport Dialog from '@mui/material/Dialog';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    alignItems: 'baseline',\n  },\n}));\n\nexport default function CopyableDisplay({\n  value,\n  label,\n  autoFocus,\n  qrCode,\n  helperText = '',\n}) {\n  const { enqueueSnackbar } = useSnackbar();\n  const textareaRef = useRef();\n  const classes = useStyles();\n  const copyLink = () => {\n    let textArea = textareaRef.current;\n    if (textArea) {\n      textArea.select();\n      document.execCommand('copy');\n      enqueueSnackbar(`Copied ${label}`, {\n        variant: 'info',\n        autoHideDuration: 2500,\n      });\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        inputRef={(ref) => (textareaRef.current = ref)}\n        multiline\n        autoFocus={autoFocus}\n        value={value}\n        readOnly\n        onFocus={(e) => e.currentTarget.select()}\n        className={classes.textArea}\n        fullWidth\n        helperText={helperText}\n        label={label}\n        spellCheck={false}\n      />\n      <IconButton onClick={copyLink}>\n        <CopyIcon />\n      </IconButton>\n      {qrCode ? <Qrcode value={qrCode === true ? value : qrCode} /> : null}\n    </div>\n  );\n}\n\nconst useQrCodeStyles = makeStyles((theme) => ({\n  qrcodeContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nfunction Qrcode({ value }) {\n  const [showQrcode, setShowQrcode] = React.useState(false);\n  const classes = useQrCodeStyles();\n\n  return (\n    <>\n      <IconButton onClick={() => setShowQrcode(true)}>\n        <QrcodeIcon />\n      </IconButton>\n      <Dialog open={showQrcode} onClose={() => setShowQrcode(false)}>\n        <DialogContent className={classes.qrcodeContainer}>\n          <QRCode value={value} size={256} includeMargin />\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n","import { Typography } from '@mui/material';\nimport Link from '@mui/material/Link';\nimport React from 'react';\nimport { useSolanaExplorerUrlSuffix } from '../utils/connection';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogForm from '../pages/Wallet/components/DialogForm';\nimport { abbreviateAddress } from '../utils/utils';\nimport CopyableDisplay from './CopyableDisplay';\nimport { makeStyles } from '@mui/material/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  explorerLink: {\n    marginBottom: theme.spacing(2),\n  },\n  warning: {\n    marginBottom: theme.spacing(2),\n  },\n  container: {\n    minWidth: 600,\n  },\n}));\n\nexport default function TokenInfoDialog({\n  open,\n  onClose,\n  publicKey,\n  balanceInfo,\n}) {\n  let { mint, tokenName, tokenSymbol } = balanceInfo;\n  const urlSuffix = useSolanaExplorerUrlSuffix();\n  const classes = useStyles();\n\n  return (\n    <DialogForm open={open} onClose={onClose}>\n      <DialogTitle>\n        {tokenName ?? abbreviateAddress(mint)}\n        {tokenSymbol ? ` (${tokenSymbol})` : null}\n      </DialogTitle>\n      <DialogContent className={classes.container}>\n        <Typography className={classes.warning}>\n          Information about {tokenName ?? abbreviateAddress(mint)}\n        </Typography>\n        <Typography variant=\"body2\" className={classes.explorerLink}>\n          <Link\n            href={\n              `https://explorer.solana.com/account/${publicKey.toBase58()}` +\n              urlSuffix\n            }\n            target=\"_blank\"\n            rel=\"noopener\"\n          >\n            View on Solana Explorer\n          </Link>\n        </Typography>\n        {!!mint && (\n          <CopyableDisplay\n            value={mint.toBase58()}\n            label={'Token Mint Address'}\n            autoFocus\n            helperText={\n              <>\n                This is <strong>not</strong> your deposit address\n              </>\n            }\n          />\n        )}\n        {!!tokenName && (\n          <CopyableDisplay value={tokenName} label={'Token Name'} />\n        )}\n        {!!tokenSymbol && (\n          <CopyableDisplay value={tokenSymbol} label={'Token Symbol'} />\n        )}\n      </DialogContent>\n    </DialogForm>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogActions from '@mui/material/DialogActions';\nimport Button from '@mui/material/Button';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport TextField from '@mui/material/TextField';\nimport {\n  refreshWalletPublicKeys,\n  useWallet,\n  useWalletTokenAccounts,\n} from '../utils/wallet';\nimport { LAMPORTS_PER_SOL, PublicKey } from '@solana/web3.js';\nimport { TOKENS } from '../utils/tokens/tokens'\nimport { useUpdateTokenName } from '../utils/tokens/names';\nimport { useAsyncData } from '../utils/fetch-loop';\nimport LoadingIndicator from './LoadingIndicator';\nimport { makeStyles, Tab, Tabs } from '@mui/material';\nimport { useSendTransaction } from '../utils/notifications';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport { abbreviateAddress } from '../utils/utils';\nimport ExpandLess from '@mui/icons-material/ExpandLess';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport Collapse from '@mui/material/Collapse';\nimport {\n  useConnectionConfig,\n  useSolanaExplorerUrlSuffix,\n} from '../utils/connection';\nimport Link from '@mui/material/Link';\nimport CopyableDisplay from './CopyableDisplay';\nimport DialogForm from '../pages/Wallet/components/DialogForm';\nimport { showSwapAddress } from '../utils/config';\nimport { swapApiRequest } from '../utils/swap/api';\nimport TokenIcon from './TokenIcon';\n\nconst feeFormat = new Intl.NumberFormat(undefined, {\n  minimumFractionDigits: 6,\n  maximumFractionDigits: 6,\n});\n\nconst useStyles = makeStyles((theme) => ({\n  tabs: {\n    marginBottom: theme.spacing(1),\n    borderBottom: `1px solid ${theme.palette.background.paper}`,\n  },\n}));\n\nexport default function AddTokenDialog({ open, onClose }) {\n  let wallet = useWallet();\n  let [tokenAccountCost] = useAsyncData(\n    wallet.tokenAccountCost,\n    wallet.tokenAccountCost,\n  );\n  let classes = useStyles();\n  let updateTokenName = useUpdateTokenName();\n  const [sendTransaction, sending] = useSendTransaction();\n  const { endpoint } = useConnectionConfig();\n  const popularTokens = TOKENS[endpoint];\n  const [walletAccounts] = useWalletTokenAccounts();\n\n  const [tab, setTab] = useState(!!popularTokens ? 'popular' : 'manual');\n  const [mintAddress, setMintAddress] = useState('');\n  const [tokenName, setTokenName] = useState('');\n  const [tokenSymbol, setTokenSymbol] = useState('');\n  const [erc20Address, setErc20Address] = useState('');\n\n  useEffect(() => {\n    if (!popularTokens) {\n      setTab('manual');\n    }\n  }, [popularTokens]);\n\n  function onSubmit(params) {\n    if (tab === 'manual') {\n      params = { mintAddress, tokenName, tokenSymbol };\n    } else if (tab === 'erc20') {\n      params = { erc20Address };\n    }\n    sendTransaction(addToken(params), {\n      onSuccess: () => {\n        refreshWalletPublicKeys(wallet);\n        onClose();\n      },\n    });\n  }\n\n  async function addToken({\n    mintAddress,\n    tokenName,\n    tokenSymbol,\n    erc20Address,\n  }) {\n    if (erc20Address) {\n      let tokenInfo = await swapApiRequest('POST', `coins/eth/${erc20Address}`);\n      mintAddress = tokenInfo.splMint;\n      tokenName = tokenInfo.name;\n      tokenSymbol = tokenInfo.ticker;\n      if (tokenInfo.blockchain !== 'sol') {\n        tokenName = 'Wrapped ' + tokenName;\n      }\n    }\n\n    let mint = new PublicKey(mintAddress);\n    updateTokenName(mint, tokenName, tokenSymbol);\n    const resp = await wallet.createAssociatedTokenAccount(mint);\n    return resp[1];\n  }\n\n  let valid = true;\n  if (tab === 'erc20') {\n    valid = erc20Address.length === 42 && erc20Address.startsWith('0x');\n  }\n\n  return (\n    <DialogForm open={open} onClose={onClose}>\n      <DialogTitle>Add Token</DialogTitle>\n      <DialogContent>\n        {tokenAccountCost ? (\n          <DialogContentText>\n            Add a token to your wallet. This will cost{' '}\n            {feeFormat.format(tokenAccountCost / LAMPORTS_PER_SOL)} SOL.\n          </DialogContentText>\n        ) : (\n          <LoadingIndicator />\n        )}\n        {!!popularTokens && (\n          <Tabs\n            value={tab}\n            textColor=\"primary\"\n            indicatorColor=\"primary\"\n            className={classes.tabs}\n            onChange={(e, value) => setTab(value)}\n          >\n            <Tab label=\"Popular Tokens\" value=\"popular\" />\n            {showSwapAddress ? <Tab label=\"ERC20 Token\" value=\"erc20\" /> : null}\n            <Tab label=\"Manual Input\" value=\"manual\" />\n          </Tabs>\n        )}\n        {tab === 'manual' || !popularTokens ? (\n          <React.Fragment>\n            <TextField\n              label=\"Token Mint Address\"\n              fullWidth\n              variant=\"outlined\"\n              margin=\"normal\"\n              value={mintAddress}\n              onChange={(e) => setMintAddress(e.target.value)}\n              autoFocus\n              disabled={sending}\n            />\n            <TextField\n              label=\"Token Name\"\n              fullWidth\n              variant=\"outlined\"\n              margin=\"normal\"\n              value={tokenName}\n              onChange={(e) => setTokenName(e.target.value)}\n              disabled={sending}\n            />\n            <TextField\n              label=\"Token Symbol\"\n              fullWidth\n              variant=\"outlined\"\n              margin=\"normal\"\n              value={tokenSymbol}\n              onChange={(e) => setTokenSymbol(e.target.value)}\n              disabled={sending}\n            />\n          </React.Fragment>\n        ) : tab === 'popular' ? (\n          <List disablePadding>\n            {popularTokens\n              .filter((token) => !token.deprecated)\n              .map((token) => (\n                <TokenListItem\n                  key={token.mintAddress}\n                  {...token}\n                  existingAccount={(walletAccounts || []).find(\n                    (account) =>\n                      account.parsed.mint.toBase58() === token.mintAddress,\n                  )}\n                  onSubmit={onSubmit}\n                  disalbed={sending}\n                />\n              ))}\n          </List>\n        ) : tab === 'erc20' ? (\n          <>\n            <TextField\n              label=\"ERC20 Contract Address\"\n              fullWidth\n              variant=\"outlined\"\n              margin=\"normal\"\n              value={erc20Address}\n              onChange={(e) => setErc20Address(e.target.value.trim())}\n              autoFocus\n              disabled={sending}\n            />\n            {erc20Address && valid ? (\n              <Link\n                href={`https://etherscan.io/token/${erc20Address}`}\n                target=\"_blank\"\n                rel=\"noopener\"\n              >\n                View on Etherscan\n              </Link>\n            ) : null}\n          </>\n        ) : null}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Cancel</Button>\n        {tab !== 'popular' && (\n          <Button\n            type=\"submit\"\n            color=\"primary\"\n            disabled={sending || !valid}\n            onClick={() => onSubmit({ tokenName, tokenSymbol, mintAddress })}\n          >\n            Add\n          </Button>\n        )}\n      </DialogActions>\n    </DialogForm>\n  );\n}\n\nfunction TokenListItem({\n  tokenName,\n  icon,\n  tokenSymbol,\n  mintAddress,\n  onSubmit,\n  disabled,\n  existingAccount,\n}) {\n  const [open, setOpen] = useState(false);\n  const urlSuffix = useSolanaExplorerUrlSuffix();\n  const alreadyExists = !!existingAccount;\n  return (\n    <React.Fragment>\n      <div style={{ display: 'flex' }} key={tokenName}>\n        <ListItem button onClick={() => setOpen((open) => !open)}>\n          <ListItemIcon>\n            <TokenIcon url={icon} tokenName={tokenName} size={20} />\n          </ListItemIcon>\n          <ListItemText\n            primary={\n              <Link\n                target=\"_blank\"\n                rel=\"noopener\"\n                href={\n                  `https://explorer.solana.com/account/${mintAddress}` +\n                  urlSuffix\n                }\n              >\n                {tokenName ?? abbreviateAddress(mintAddress)}\n                {tokenSymbol ? ` (${tokenSymbol})` : null}\n              </Link>\n            }\n          />\n          {open ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        <Button\n          type=\"submit\"\n          color=\"primary\"\n          disabled={disabled || alreadyExists}\n          onClick={() => onSubmit({ tokenName, tokenSymbol, mintAddress })}\n        >\n          {alreadyExists ? 'Added' : 'Add'}\n        </Button>\n      </div>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <CopyableDisplay\n          value={mintAddress}\n          label={`${tokenSymbol} Mint Address`}\n        />\n      </Collapse>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport DialogActions from '@mui/material/DialogActions';\nimport Button from '@mui/material/Button';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport TextField from '@mui/material/TextField';\nimport DialogForm from '../pages/Wallet/components/DialogForm';\nimport { useWallet, useWalletAddressForMint } from '../utils/wallet';\nimport { PublicKey } from '@solana/web3.js';\nimport { abbreviateAddress } from '../utils/utils';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport { useCallAsync, useSendTransaction } from '../utils/notifications';\nimport { swapApiRequest, useSwapApiGet } from '../utils/swap/api';\nimport { showSwapAddress } from '../utils/config';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport {\n  ConnectToMetamaskButton,\n  getErc20Balance,\n  useEthAccount,\n  withdrawEth,\n} from '../utils/swap/eth';\nimport { useConnection, useIsProdNetwork } from '../utils/connection';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport Link from '@mui/material/Link';\nimport Typography from '@mui/material/Typography';\nimport { useAsyncData } from '../utils/fetch-loop';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport {\n  TOKEN_PROGRAM_ID,\n  WRAPPED_SOL_MINT,\n} from '../utils/tokens/instructions';\nimport { parseTokenAccountData } from '../utils/tokens/data';\nimport { Switch, Tooltip } from '@mui/material';\nimport { EthFeeEstimate } from './EthFeeEstimate';\n\nconst WUSDC_MINT = new PublicKey(\n  'BXXkv6z8ykpG1yuvUDPgh732wzVHB69RnB9YgSYh3itW',\n);\nconst USDC_MINT = new PublicKey('EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v');\n\nexport default function SendDialog({ open, onClose, publicKey, balanceInfo }) {\n  const isProdNetwork = useIsProdNetwork();\n  const [tab, setTab] = useState('spl');\n  const onSubmitRef = useRef();\n\n  const [swapCoinInfo] = useSwapApiGet(\n    showSwapAddress && balanceInfo.mint && isProdNetwork\n      ? `coins/sol/${balanceInfo.mint.toBase58()}`\n      : null,\n  );\n  const ethAccount = useEthAccount();\n\n  const { mint, tokenName, tokenSymbol } = balanceInfo;\n\n  return (\n    <>\n      <DialogForm\n        open={open}\n        onClose={onClose}\n        onSubmit={() => onSubmitRef.current()}\n        fullWidth\n      >\n        <DialogTitle>\n          Send {tokenName ?? abbreviateAddress(mint)}\n          {tokenSymbol ? ` (${tokenSymbol})` : null}\n          {ethAccount && (\n            <div>\n              <Typography color=\"textSecondary\" style={{ fontSize: '14px' }}>\n                Metamask connected: {ethAccount}\n              </Typography>\n            </div>\n          )}\n        </DialogTitle>\n        {swapCoinInfo ? (\n          <Tabs\n            value={tab}\n            variant=\"fullWidth\"\n            onChange={(e, value) => setTab(value)}\n            textColor=\"primary\"\n            indicatorColor=\"primary\"\n          >\n            {mint?.equals(WUSDC_MINT)\n              ? [\n                  <Tab label=\"SPL WUSDC\" key=\"spl\" value=\"spl\" />,\n                  <Tab\n                    label=\"SPL USDC\"\n                    key=\"wusdcToSplUsdc\"\n                    value=\"wusdcToSplUsdc\"\n                  />,\n                  <Tab label=\"ERC20 USDC\" key=\"swap\" value=\"swap\" />,\n                ]\n              : [\n                  <Tab\n                    label={`SPL ${swapCoinInfo.ticker}`}\n                    key=\"spl\"\n                    value=\"spl\"\n                  />,\n                  <Tab\n                    label={`${\n                      swapCoinInfo.erc20Contract ? 'ERC20' : 'Native'\n                    } ${swapCoinInfo.ticker}`}\n                    key=\"swap\"\n                    value=\"swap\"\n                  />,\n                ]}\n          </Tabs>\n        ) : null}\n        {tab === 'spl' ? (\n          <SendSplDialog\n            onClose={onClose}\n            publicKey={publicKey}\n            balanceInfo={balanceInfo}\n            onSubmitRef={onSubmitRef}\n          />\n        ) : tab === 'wusdcToSplUsdc' ? (\n          <SendSwapDialog\n            key={tab}\n            onClose={onClose}\n            publicKey={publicKey}\n            balanceInfo={balanceInfo}\n            swapCoinInfo={swapCoinInfo}\n            onSubmitRef={onSubmitRef}\n            wusdcToSplUsdc\n          />\n        ) : (\n          <SendSwapDialog\n            key={tab}\n            onClose={onClose}\n            publicKey={publicKey}\n            balanceInfo={balanceInfo}\n            swapCoinInfo={swapCoinInfo}\n            ethAccount={ethAccount}\n            onSubmitRef={onSubmitRef}\n          />\n        )}\n      </DialogForm>\n      {ethAccount &&\n      (swapCoinInfo?.blockchain === 'eth' || swapCoinInfo?.erc20Contract) ? (\n        <EthWithdrawalCompleter ethAccount={ethAccount} publicKey={publicKey} />\n      ) : null}\n    </>\n  );\n}\n\nfunction SendSplDialog({ onClose, publicKey, balanceInfo, onSubmitRef }) {\n  const defaultAddressHelperText =\n    !balanceInfo.mint || balanceInfo.mint.equals(WRAPPED_SOL_MINT)\n      ? 'Enter Solana Address'\n      : 'Enter SPL token or Solana address';\n  const wallet = useWallet();\n  const [sendTransaction, sending] = useSendTransaction();\n  const [addressHelperText, setAddressHelperText] = useState(\n    defaultAddressHelperText,\n  );\n  const [passValidation, setPassValidation] = useState();\n  const [overrideDestinationCheck, setOverrideDestinationCheck] = useState(\n    false,\n  );\n  const [shouldShowOverride, setShouldShowOverride] = useState();\n  const {\n    fields,\n    destinationAddress,\n    transferAmountString,\n    validAmount,\n  } = useForm(balanceInfo, addressHelperText, passValidation);\n  const { decimals, mint } = balanceInfo;\n  const mintString = mint && mint.toBase58();\n\n  useEffect(() => {\n    (async () => {\n      if (!destinationAddress) {\n        setAddressHelperText(defaultAddressHelperText);\n        setPassValidation(undefined);\n        setShouldShowOverride(undefined);\n        return;\n      }\n      try {\n        const destinationAccountInfo = await wallet.connection.getAccountInfo(\n          new PublicKey(destinationAddress),\n        );\n        setShouldShowOverride(false);\n\n        if (destinationAccountInfo.owner.equals(TOKEN_PROGRAM_ID)) {\n          const accountInfo = parseTokenAccountData(\n            destinationAccountInfo.data,\n          );\n          if (accountInfo.mint.toBase58() === mintString) {\n            setPassValidation(true);\n            setAddressHelperText('Address is a valid SPL token address');\n          } else {\n            setPassValidation(false);\n            setAddressHelperText('Destination address mint does not match');\n          }\n        } else {\n          setPassValidation(true);\n          setAddressHelperText('Destination is a Solana address');\n        }\n      } catch (e) {\n        console.log(`Received error validating address ${e}`);\n        setAddressHelperText(defaultAddressHelperText);\n        setShouldShowOverride(true);\n        setPassValidation(undefined);\n      }\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [destinationAddress, wallet, mintString]);\n\n  useEffect(() => {\n    return () => {\n      setOverrideDestinationCheck(false);\n    };\n  }, [setOverrideDestinationCheck]);\n\n  async function makeTransaction() {\n    let amount = Math.round(parseFloat(transferAmountString) * 10 ** decimals);\n    if (!amount || amount <= 0) {\n      throw new Error('Invalid amount');\n    }\n    return wallet.transferToken(\n      publicKey,\n      new PublicKey(destinationAddress),\n      amount,\n      balanceInfo.mint,\n      null,\n      overrideDestinationCheck,\n    );\n  }\n\n  const disabled = shouldShowOverride\n    ? !overrideDestinationCheck || sending || !validAmount\n    : sending || !validAmount;\n\n  async function onSubmit() {\n    return sendTransaction(makeTransaction(), { onSuccess: onClose });\n  }\n  onSubmitRef.current = onSubmit;\n  return (\n    <>\n      <DialogContent>{fields}</DialogContent>\n      <DialogActions>\n        {shouldShowOverride && (\n          <div\n            style={{\n              'align-items': 'center',\n              display: 'flex',\n              'text-align': 'left',\n            }}\n          >\n            <b>This address has no funds. Are you sure it's correct?</b>\n            <Switch\n              checked={overrideDestinationCheck}\n              onChange={(e) => setOverrideDestinationCheck(e.target.checked)}\n              color=\"primary\"\n            />\n          </div>\n        )}\n        <Button onClick={onClose}>Cancel</Button>\n        <Button type=\"submit\" color=\"primary\" disabled={disabled}>\n          Send\n        </Button>\n      </DialogActions>\n    </>\n  );\n}\n\nfunction SendSwapDialog({\n  onClose,\n  publicKey,\n  balanceInfo,\n  swapCoinInfo,\n  ethAccount,\n  wusdcToSplUsdc = false,\n  onSubmitRef,\n}) {\n  const wallet = useWallet();\n  const [sendTransaction, sending] = useSendTransaction();\n  const [signature, setSignature] = useState(null);\n  const {\n    fields,\n    destinationAddress,\n    transferAmountString,\n    setDestinationAddress,\n    validAmount,\n  } = useForm(balanceInfo);\n\n  const { tokenName, decimals, mint } = balanceInfo;\n  const blockchain = wusdcToSplUsdc\n    ? 'sol'\n    : swapCoinInfo.blockchain === 'sol'\n    ? 'eth'\n    : swapCoinInfo.blockchain;\n  const needMetamask = blockchain === 'eth';\n\n  const [ethBalance] = useAsyncData(\n    () => getErc20Balance(ethAccount),\n    'ethBalance',\n    {\n      refreshInterval: 2000,\n    },\n  );\n  const ethFeeData = useSwapApiGet(\n    blockchain === 'eth' &&\n      `fees/eth/${ethAccount}` +\n        (swapCoinInfo.erc20Contract ? '/' + swapCoinInfo.erc20Contract : ''),\n    { refreshInterval: 2000 },\n  );\n  const [ethFeeEstimate] = ethFeeData;\n  const insufficientEthBalance =\n    typeof ethBalance === 'number' &&\n    typeof ethFeeEstimate === 'number' &&\n    ethBalance < ethFeeEstimate;\n\n  useEffect(() => {\n    if (blockchain === 'eth' && ethAccount) {\n      setDestinationAddress(ethAccount);\n    }\n  }, [blockchain, ethAccount, setDestinationAddress]);\n\n  let splUsdcWalletAddress = useWalletAddressForMint(\n    wusdcToSplUsdc ? USDC_MINT : null,\n  );\n  useEffect(() => {\n    if (wusdcToSplUsdc && splUsdcWalletAddress) {\n      setDestinationAddress(splUsdcWalletAddress);\n    }\n  }, [setDestinationAddress, wusdcToSplUsdc, splUsdcWalletAddress]);\n\n  async function makeTransaction() {\n    let amount = Math.round(parseFloat(transferAmountString) * 10 ** decimals);\n    if (!amount || amount <= 0) {\n      throw new Error('Invalid amount');\n    }\n    const params = {\n      blockchain,\n      address: destinationAddress,\n      size: amount / 10 ** decimals,\n    };\n    if (blockchain === 'sol') {\n      params.coin = swapCoinInfo.splMint;\n    } else if (blockchain === 'eth') {\n      params.coin = swapCoinInfo.erc20Contract;\n    }\n    if (mint?.equals(WUSDC_MINT)) {\n      params.wusdcToUsdc = true;\n    }\n    const swapInfo = await swapApiRequest('POST', 'swap_to', params);\n    if (swapInfo.blockchain !== 'sol') {\n      throw new Error('Unexpected blockchain');\n    }\n    return wallet.transferToken(\n      publicKey,\n      new PublicKey(swapInfo.address),\n      amount,\n      balanceInfo.mint,\n      swapInfo.memo,\n    );\n  }\n\n  async function onSubmit() {\n    return sendTransaction(makeTransaction(), { onSuccess: setSignature });\n  }\n  onSubmitRef.current = onSubmit;\n\n  if (signature) {\n    return (\n      <SendSwapProgress\n        key={signature}\n        publicKey={publicKey}\n        signature={signature}\n        blockchain={blockchain}\n        onClose={onClose}\n      />\n    );\n  }\n\n  let sendButton = (\n    <Button\n      type=\"submit\"\n      color=\"primary\"\n      disabled={\n        sending ||\n        (needMetamask && !ethAccount) ||\n        !validAmount ||\n        insufficientEthBalance\n      }\n    >\n      Send\n    </Button>\n  );\n\n  if (insufficientEthBalance) {\n    sendButton = (\n      <Tooltip\n        title=\"Insufficient ETH for withdrawal transaction fee\"\n        placement=\"top\"\n      >\n        <span>{sendButton}</span>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <>\n      <DialogContent style={{ paddingTop: 16 }}>\n        <DialogContentText>\n          SPL {tokenName} can be converted to{' '}\n          {blockchain === 'eth' && swapCoinInfo.erc20Contract\n            ? 'ERC20'\n            : blockchain === 'sol' && swapCoinInfo.splMint\n            ? 'SPL'\n            : 'native'}{' '}\n          {swapCoinInfo.ticker}\n          {needMetamask ? ' via MetaMask' : null}.\n        </DialogContentText>\n        {blockchain === 'eth' && (\n          <DialogContentText>\n            Estimated withdrawal transaction fee:\n            <EthFeeEstimate\n              ethFeeData={ethFeeData}\n              insufficientEthBalance={insufficientEthBalance}\n            />\n          </DialogContentText>\n        )}\n        {needMetamask && !ethAccount ? <ConnectToMetamaskButton /> : fields}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Cancel</Button>\n        {sendButton}\n      </DialogActions>\n    </>\n  );\n}\n\nfunction SendSwapProgress({ publicKey, signature, onClose, blockchain }) {\n  const connection = useConnection();\n  const [swaps] = useSwapApiGet(`swaps_from/sol/${publicKey.toBase58()}`, {\n    refreshInterval: 1000,\n  });\n  const [confirms] = useAsyncData(\n    async () => {\n      const { value } = await connection.getSignatureStatus(signature);\n      return value?.confirmations;\n    },\n    [connection.getSignatureStatus, signature],\n    { refreshInterval: 2000 },\n  );\n\n  let step = 1;\n  let ethTxid = null;\n  for (let swap of swaps || []) {\n    const { deposit, withdrawal } = swap;\n    if (deposit.txid === signature) {\n      if (withdrawal.txid?.startsWith('0x')) {\n        step = 3;\n        ethTxid = withdrawal.txid;\n      } else if (withdrawal.txid && blockchain !== 'eth') {\n        step = 3;\n      } else {\n        step = 2;\n      }\n    }\n  }\n\n  return (\n    <>\n      <DialogContent>\n        <Stepper activeStep={step}>\n          <Step>\n            <StepLabel>Send Request</StepLabel>\n          </Step>\n          <Step>\n            <StepLabel>Wait for Confirmations</StepLabel>\n          </Step>\n          <Step>\n            <StepLabel>Withdraw Funds</StepLabel>\n          </Step>\n        </Stepper>\n        {ethTxid ? (\n          <Typography variant=\"body2\" align=\"center\">\n            <Link\n              href={`https://etherscan.io/tx/${ethTxid}`}\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              View on Etherscan\n            </Link>\n          </Typography>\n        ) : step < 3 ? (\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}\n          >\n            <div style={{ marginRight: 16 }}>\n              <CircularProgress />\n            </div>\n            {confirms ? (\n              <Typography>{confirms} / 35 Confirmations</Typography>\n            ) : (\n              <Typography>Transaction Pending</Typography>\n            )}\n          </div>\n        ) : null}\n        {!ethTxid && blockchain === 'eth' ? (\n          <DialogContentText style={{ marginTop: 16, marginBottom: 0 }}>\n            Please keep this window open. You will need to approve the request\n            on MetaMask to complete the transaction.\n          </DialogContentText>\n        ) : null}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Close</Button>\n      </DialogActions>\n    </>\n  );\n}\n\nfunction useForm(\n  balanceInfo,\n  addressHelperText,\n  passAddressValidation,\n  overrideValidation,\n) {\n  const [destinationAddress, setDestinationAddress] = useState('');\n  const [transferAmountString, setTransferAmountString] = useState('');\n  const { amount: balanceAmount, decimals, tokenSymbol } = balanceInfo;\n\n  const parsedAmount = parseFloat(transferAmountString) * 10 ** decimals;\n  const validAmount = parsedAmount > 0 && parsedAmount <= balanceAmount;\n\n  const fields = (\n    <>\n      <TextField\n        label=\"Recipient Address\"\n        fullWidth\n        variant=\"outlined\"\n        margin=\"normal\"\n        value={destinationAddress}\n        onChange={(e) => setDestinationAddress(e.target.value.trim())}\n        helperText={addressHelperText}\n        id={\n          !passAddressValidation && passAddressValidation !== undefined\n            ? 'outlined-error-helper-text'\n            : undefined\n        }\n        error={!passAddressValidation && passAddressValidation !== undefined}\n      />\n      <TextField\n        label=\"Amount\"\n        fullWidth\n        variant=\"outlined\"\n        margin=\"normal\"\n        type=\"number\"\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <Button\n                onClick={() =>\n                  setTransferAmountString(\n                    balanceAmountToUserAmount(balanceAmount, decimals),\n                  )\n                }\n              >\n                MAX\n              </Button>\n              {tokenSymbol ? tokenSymbol : null}\n            </InputAdornment>\n          ),\n          inputProps: {\n            step: Math.pow(10, -decimals),\n          },\n        }}\n        value={transferAmountString}\n        onChange={(e) => setTransferAmountString(e.target.value.trim())}\n        helperText={\n          <span\n            onClick={() =>\n              setTransferAmountString(\n                balanceAmountToUserAmount(balanceAmount, decimals),\n              )\n            }\n          >\n            Max: {balanceAmountToUserAmount(balanceAmount, decimals)}\n          </span>\n        }\n      />\n    </>\n  );\n\n  return {\n    fields,\n    destinationAddress,\n    transferAmountString,\n    setDestinationAddress,\n    validAmount,\n  };\n}\n\nfunction balanceAmountToUserAmount(balanceAmount, decimals) {\n  return (balanceAmount / Math.pow(10, decimals)).toFixed(decimals);\n}\n\nfunction EthWithdrawalCompleter({ ethAccount, publicKey }) {\n  const [swaps] = useSwapApiGet(`swaps_from/sol/${publicKey.toBase58()}`, {\n    refreshInterval: 10000,\n  });\n  if (!swaps) {\n    return null;\n  }\n  return swaps.map((swap) => (\n    <EthWithdrawalCompleterItem\n      key={swap.deposit.txid}\n      ethAccount={ethAccount}\n      swap={swap}\n    />\n  ));\n}\n\nfunction EthWithdrawalCompleterItem({ ethAccount, swap }) {\n  const callAsync = useCallAsync();\n  const { withdrawal } = swap;\n  useEffect(() => {\n    if (\n      withdrawal.status === 'sent' &&\n      withdrawal.blockchain === 'eth' &&\n      withdrawal.txid &&\n      !withdrawal.txid.startsWith('0x') &&\n      withdrawal.txData\n    ) {\n      withdrawEth(ethAccount, withdrawal, callAsync);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [withdrawal.txid, withdrawal.status]);\n  return null;\n}\n","import DialogForm from '../pages/Wallet/components/DialogForm';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport { DialogContentText } from '@mui/material';\nimport { abbreviateAddress } from '../utils/utils';\nimport DialogActions from '@mui/material/DialogActions';\nimport Button from '@mui/material/Button';\nimport React from 'react';\nimport { useSendTransaction } from '../utils/notifications';\nimport { refreshWalletPublicKeys, useWallet } from '../utils/wallet';\n\nexport default function CloseTokenAccountDialog({\n  open,\n  onClose,\n  publicKey,\n  balanceInfo,\n}) {\n  const wallet = useWallet();\n  const [sendTransaction, sending] = useSendTransaction();\n  const { mint, tokenName } = balanceInfo;\n\n  function onSubmit() {\n    sendTransaction(wallet.closeTokenAccount(publicKey), {\n      onSuccess: () => {\n        refreshWalletPublicKeys(wallet);\n        onClose();\n      },\n    });\n  }\n\n  return (\n    <DialogForm open={open} onClose={onClose} onSubmit={onSubmit}>\n      <DialogTitle>\n        Delete {tokenName ?? mint.toBase58()} Address{' '}\n        {abbreviateAddress(publicKey)}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Are you sure you want to delete your {tokenName ?? mint.toBase58()}{' '}\n          address {publicKey.toBase58()}? This will permanently disable token\n          transfers to this address and remove it from your wallet.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Cancel</Button>\n        <Button type=\"submit\" color=\"secondary\" disabled={sending}>\n          Delete\n        </Button>\n      </DialogActions>\n    </DialogForm>\n  );\n}\n","import { useState } from 'react';\nimport { useSnackbar } from 'notistack';\nimport DialogForm, { StyledPaper } from '../pages/Wallet/components/DialogForm';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { TokenInstructions } from '@project-serum/serum';\nimport { useWalletPublicKeys } from '../utils/wallet';\nimport { useTheme } from '@mui/material';\nimport AttentionComponent from '../components/Attention';\nimport {\n  Card,\n  VioletButton,\n  RowContainer,\n  Input,\n  WhiteButton,\n  Title,\n} from '../pages/commonStyles';\nimport {\n  useConnection,\n  refreshAccountInfo,\n  getMultipleSolanaAccounts,\n} from '../utils/connection';\nimport { parseTokenAccountData } from '../utils/tokens/data';\nimport { refreshWalletPublicKeys, useWallet } from '../utils/wallet';\nimport {\n  createAssociatedTokenAccount,\n  findAssociatedTokenAddress,\n} from '../utils/tokens';\nimport { sleep } from '../utils/utils';\nimport { useTokenInfosMap, getTokenInfo } from '../utils/tokens/names';\n\nexport default function MergeAccountsDialog({ open, onClose }) {\n  const theme = useTheme();\n  const [publicKeys] = useWalletPublicKeys();\n  const connection = useConnection();\n  const wallet = useWallet();\n  const { enqueueSnackbar } = useSnackbar();\n  const [isMerging, setIsMerging] = useState(false);\n  const [mergeCheck, setMergeCheck] = useState('');\n  const tokenInfosMap = useTokenInfosMap();\n\n  // Merging accounts is a destructive operation that, for each mint,\n  //\n  // * Creates an associated token account, if not already created\n  // * Moves all funds into the associated token account\n  // * Closes every account, excluding the associated token account.\n  //\n  // Although it's ok if this operation fails--since the user can just\n  // retry again--it's not a good experience; hence the retry logic.\n  // The retry count of 30 is arbitrary and probably overly conservative.\n  const mergeAccounts = async (retryCount = 30) => {\n    try {\n      if (retryCount === 0) {\n        enqueueSnackbar(`Unable to complete merge. Please try again.`, {\n          variant: 'error',\n        });\n        return;\n      }\n      // Fetch all token accounts owned by the wallet. An account is null\n      // if we previously sent the close transaction, but did not receive\n      // a response due to RPC node instability.\n      const tokenAccounts = (\n        await getMultipleSolanaAccounts(connection, publicKeys)\n      )\n        .filter(\n          (acc) =>\n            acc !== null &&\n            acc.account.owner.equals(TokenInstructions.TOKEN_PROGRAM_ID),\n        )\n        .map(({ publicKey, account }) => {\n          return {\n            publicKey,\n            account: parseTokenAccountData(account.data),\n            owner: account.owner,\n          };\n        });\n\n      // Group the token accounts by mint.\n      const groupedTokenAccounts = {};\n      tokenAccounts.forEach((ta) => {\n        const key = ta.account.mint.toString();\n        if (groupedTokenAccounts[key]) {\n          groupedTokenAccounts[key].push(ta);\n        } else {\n          groupedTokenAccounts[key] = [ta];\n        }\n      });\n\n      // For each mint, merge them into one, associated token account.\n      const mints = Object.keys(groupedTokenAccounts);\n      for (let k = 0; k < mints.length; k += 1) {\n        const mintGroup = groupedTokenAccounts[mints[k]];\n        if (mintGroup.length > 0) {\n          const mint = mintGroup[0].account.mint;\n          const assocTokAddr = await findAssociatedTokenAddress(\n            wallet.publicKey,\n            mint,\n          );\n          // Don't merge if the only account is the associated token address.\n          if (\n            !(\n              mintGroup.length === 1 &&\n              assocTokAddr.equals(mintGroup[0].publicKey)\n            )\n          ) {\n            const tokenInfo = getTokenInfo(\n              mint,\n              connection._rpcEndpoint,\n              tokenInfosMap,\n            );\n            const symbol = tokenInfo.symbol\n              ? tokenInfo.symbol\n              : mint.toString();\n            console.log(`Merging ${symbol}`);\n            enqueueSnackbar(`Merging ${symbol}`, {\n              variant: 'info',\n            });\n            await mergeMint(\n              assocTokAddr,\n              mintGroup,\n              mint,\n              tokenInfo.decimals,\n              wallet,\n              connection,\n              enqueueSnackbar,\n            );\n          }\n        }\n      }\n\n      // Wait to give the RPC nodes some time to catch up.\n      await sleep(5000);\n\n      // Refresh the UI to remove any duplicates.\n      await refresh(wallet, publicKeys);\n\n      // Exit dialogue.\n      close();\n    } catch (err) {\n      console.error('There was a problem merging accounts', err);\n      enqueueSnackbar('Could not confirm transaction. Please wait.', {\n        variant: 'info',\n      });\n\n      // Sleep to give the RPC nodes some time to catch up.\n      await sleep(10000);\n\n      enqueueSnackbar('Retrying merge', { variant: 'info' });\n      await mergeAccounts(retryCount - 1);\n    }\n  };\n  const close = () => {\n    setMergeCheck('');\n    onClose();\n  };\n  const disabled = mergeCheck.toLowerCase() !== 'merge';\n\n  return (\n    <DialogForm\n      theme={theme}\n      PaperComponent={StyledPaper}\n      fullScreen={false}\n      onClose={() => {}}\n      maxWidth={'md'}\n      open={open}\n      aria-labelledby=\"responsive-dialog-title\"\n    >\n      {isMerging ? (\n        <Card>\n          <DialogContentText\n            style={{ marginBottom: 0, textAlign: 'center', color: 'pink' }}\n          >\n            Merging Accounts\n          </DialogContentText>\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'center',\n              padding: '24px',\n            }}\n          >\n            <CircularProgress />\n          </div>\n        </Card>\n      ) : (\n        <RowContainer justify={'space-between'} height={'100%'} direction={'column'}>\n          <Title\n            maxFont={'2.1rem'}\n            fontSize=\"2.4rem\"\n            fontFamily={'Avenir Next Demi'}\n            style={{ marginBottom: 0 }}\n          >\n            Are you sure you want to merge tokens?\n          </Title>\n          <RowContainer padding={'2rem 0'} direction={'column'}>\n            <Title\n              color={'#fbf2f2'}\n              style={{\n                fontSize: '1.4rem',\n                marginTop: '1rem',\n                textAlign: 'initial',\n              }}\n            >\n              Merging sends all tokens to associated token accounts . If\n              associated token accounts do not exist, then they will be created.\n            </Title>\n            <Title\n              color={'#fbf2f2'}\n              style={{\n                fontSize: '1.4rem',\n                margin: '2rem 0',\n                textAlign: 'initial',\n              }}\n            >\n              If merging fails during a period of high network load, you will\n              not have lost your funds. Just recontinue the merge from where you\n              left off. If you have a lot of accounts, merging might take a\n              while.\n            </Title>\n            <AttentionComponent\n              blockHeight=\"8rem\"\n              iconStyle={{ margin: '0 2rem 0 3rem' }}\n              textStyle={{\n                fontSize: '1.4rem',\n              }}\n              text={\n                'This action may break apps that depend on your existing token accounts.'\n              }\n            />\n            <Input\n              style={{ marginTop: '2rem' }}\n              fullWidth\n              variant=\"outlined\"\n              margin=\"normal\"\n              value={mergeCheck}\n              onChange={(e) => setMergeCheck(e.target.value.trim())}\n              placeholder={'Type \"merge\" to confirm'}\n            />\n          </RowContainer>\n          <RowContainer padding={'1rem 0'} justify={'space-between'}>\n            <WhiteButton\n              style={{ width: '49%' }}\n              theme={theme}\n              onClick={close}\n              color=\"primary\"\n            >\n              Cancel\n            </WhiteButton>\n            <VioletButton\n              theme={theme}\n              disabled={disabled}\n              style={{ width: '49%' }}\n              onClick={() => {\n                setIsMerging(true);\n                mergeAccounts()\n                  .then(() => {\n                    enqueueSnackbar('Account merge complete', {\n                      variant: 'success',\n                    });\n                    setIsMerging(false);\n                  })\n                  .catch((err) => {\n                    enqueueSnackbar(\n                      `There was a problem merging your accounts: ${err.toString()}`,\n                      { variant: 'error' },\n                    );\n                    setIsMerging(false);\n                  });\n              }}\n              color=\"secondary\"\n              autoFocus\n            >\n              Merge\n            </VioletButton>\n          </RowContainer>\n        </RowContainer>\n      )}\n    </DialogForm>\n  );\n}\n\n// Merges the given array of token accounts into one associated token account.\nasync function mergeMint(\n  assocTokAddr,\n  mintAccountSet,\n  mint,\n  decimals,\n  wallet,\n  connection,\n  enqueueSnackbar,\n) {\n  if (mintAccountSet.length === 0) {\n    return;\n  }\n  // Get the associated token account.\n  let associatedTokenAccount = await (async () => {\n    let assocTok = mintAccountSet\n      .map((assocTok) => assocTok.publicKey)\n      .filter((tokAddr) => tokAddr.equals(assocTokAddr))\n      .pop();\n\n    // Do we already have the token account?\n    if (assocTok) {\n      return assocTok;\n    }\n\n    // Check if the associated token account has been created.\n    // This is required due to a sometimes unstable network, where\n    // the account is created, but the client doesn't receive a\n    // response confirmation.\n    const accInfo = await connection.getAccountInfo(assocTokAddr);\n    if (accInfo !== null) {\n      return assocTokAddr;\n    }\n\n    // If it doesn't exist, then make it.\n    const [address] = await createAssociatedTokenAccount({\n      connection,\n      wallet,\n      splTokenMintAddress: mintAccountSet[0].account.mint,\n    });\n\n    return address;\n  })();\n\n  // Send all funds to the associated token account for each account.\n  // Once the funds are transferred, close the duplicated account.\n  for (let k = 0; k < mintAccountSet.length; k += 1) {\n    const tokenAccount = mintAccountSet[k];\n    if (tokenAccount.publicKey.equals(associatedTokenAccount) === false) {\n      if (tokenAccount.account.amount > 0) {\n        await wallet.transferToken(\n          tokenAccount.publicKey,\n          associatedTokenAccount,\n          tokenAccount.account.amount,\n          mint,\n          decimals,\n        );\n      }\n    }\n  }\n}\n\nasync function refresh(wallet, publicKeys) {\n  await refreshWalletPublicKeys(wallet);\n  publicKeys.map((publicKey) =>\n    refreshAccountInfo(wallet.connection, publicKey, true),\n  );\n}\n","import React, { useState, useMemo, useCallback, useEffect } from 'react';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Paper from '@mui/material/Paper';\nimport {\n  refreshWalletPublicKeys,\n  useBalanceInfo,\n  useWallet,\n  useWalletPublicKeys,\n  useWalletSelector,\n} from '../utils/wallet';\nimport { findAssociatedTokenAddress } from '../utils/tokens';\nimport LoadingIndicator from './LoadingIndicator';\nimport Collapse from '@mui/material/Collapse';\nimport { Typography, useTheme } from '@mui/material';\nimport TokenInfoDialog from './TokenInfoDialog';\nimport Link from '@mui/material/Link';\nimport ExpandLess from '@mui/icons-material/ExpandLess';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport { makeStyles } from '@mui/material/styles';\nimport { abbreviateAddress } from '../utils/utils';\nimport Button from '@mui/material/Button';\nimport SendIcon from '@mui/icons-material/Send';\nimport ReceiveIcon from '@mui/icons-material/WorkOutline';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport AddIcon from '@mui/icons-material/Add';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport IconButton from '@mui/material/IconButton';\nimport InfoIcon from '@mui/icons-material/InfoOutlined';\nimport Tooltip from '@mui/material/Tooltip';\nimport EditIcon from '@mui/icons-material/Edit';\nimport MergeType from '@mui/icons-material/MergeType';\nimport SortIcon from '@mui/icons-material/Sort';\nimport FingerprintIcon from '@mui/icons-material/Fingerprint';\nimport AddTokenDialog from './AddTokenDialog';\nimport ExportAccountDialog from './ExportAccountDialog';\nimport SendDialog from './SendDialog';\nimport {\n  useIsProdNetwork,\n  refreshAccountInfo,\n  useSolanaExplorerUrlSuffix,\n} from '../utils/connection';\nimport { serumMarkets, priceStore } from '../utils/markets';\nimport { swapApiRequest } from '../utils/swap/api';\nimport { showSwapAddress } from '../utils/config';\nimport { useAsyncData } from '../utils/fetch-loop';\nimport { showTokenInfoDialog } from '../utils/config';\nimport { useConnection } from '../utils/connection';\nimport CloseTokenAccountDialog from './CloseTokenAccountButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport TokenIcon from './TokenIcon';\nimport EditAccountNameDialog from './EditAccountNameDialog';\nimport MergeAccountsDialog from './MergeAccountsDialog';\nimport { StyledTitle } from '../pages/RestoreWallet/DerivableAccounts';\nimport { Title } from '../pages/commonStyles';\n\nconst balanceFormat = new Intl.NumberFormat(undefined, {\n  minimumFractionDigits: 4,\n  maximumFractionDigits: 4,\n  useGrouping: true,\n});\n\nconst SortAccounts = {\n  None: 0,\n  Ascending: 1,\n  Descending: 2,\n};\n\n// Aggregated $USD values of all child BalanceListItems child components.\n//\n// Values:\n// * undefined => loading.\n// * null => no market exists.\n// * float => done.\n//\n// For a given set of publicKeys, we know all the USD values have been loaded when\n// all of their values in this object are not `undefined`.\nconst usdValues = {};\n\n// Calculating associated token addresses is an asynchronous operation, so we cache\n// the values so that we can quickly render components using them. This prevents\n// flickering for the associated token fingerprint icon.\nconst associatedTokensCache = {};\n\nconst numberFormat = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n});\n\nfunction fairsIsLoaded(publicKeys) {\n  return (\n    publicKeys.filter((pk) => usdValues[pk.toString()] !== undefined).length ===\n    publicKeys.length\n  );\n}\n\nexport default function BalancesList() {\n  const wallet = useWallet();\n  const [publicKeys, loaded] = useWalletPublicKeys();\n  const [showAddTokenDialog, setShowAddTokenDialog] = useState(false);\n  const [showEditAccountNameDialog, setShowEditAccountNameDialog] = useState(\n    false,\n  );\n  const [showMergeAccounts, setShowMergeAccounts] = useState(false);\n  const [sortAccounts, setSortAccounts] = useState(SortAccounts.None);\n  const { accounts, setAccountName } = useWalletSelector();\n  // Dummy var to force rerenders on demand.\n  const [, setForceUpdate] = useState(false);\n  const selectedAccount = accounts.find((a) => a.isSelected);\n  const allTokensLoaded = loaded && fairsIsLoaded(publicKeys);\n  let sortedPublicKeys = publicKeys;\n  if (allTokensLoaded && sortAccounts !== SortAccounts.None) {\n    sortedPublicKeys = [...publicKeys];\n    sortedPublicKeys.sort((a, b) => {\n      const aVal = usdValues[a.toString()];\n      const bVal = usdValues[b.toString()];\n\n      a = aVal === undefined || aVal === null ? -1 : aVal;\n      b = bVal === undefined || bVal === null ? -1 : bVal;\n      if (sortAccounts === SortAccounts.Descending) {\n        if (a < b) {\n          return -1;\n        } else if (a > b) {\n          return 1;\n        } else {\n          return 0;\n        }\n      } else {\n        if (b < a) {\n          return -1;\n        } else if (b > a) {\n          return 1;\n        } else {\n          return 0;\n        }\n      }\n    });\n  }\n  const totalUsdValue = publicKeys\n    .filter((pk) => usdValues[pk.toString()])\n    .map((pk) => usdValues[pk.toString()])\n    .reduce((a, b) => a + b, 0.0);\n\n  // Memoized callback and component for the `BalanceListItems`.\n  //\n  // The `BalancesList` fetches data, e.g., fairs for tokens using React hooks\n  // in each of the child `BalanceListItem` components. However, we want the\n  // parent component, to aggregate all of this data together, for example,\n  // to show the cumulative USD amount in the wallet.\n  //\n  // To achieve this, we need to pass a callback from the parent to the chlid,\n  // so that the parent can collect the results of all the async network requests.\n  // However, this can cause a render loop, since invoking the callback can cause\n  // the parent to rerender, which causese the child to rerender, which causes\n  // the callback to be invoked.\n  //\n  // To solve this, we memoize all the `BalanceListItem` children components.\n  const setUsdValuesCallback = useCallback(\n    (publicKey, usdValue) => {\n      if (usdValues[publicKey.toString()] !== usdValue) {\n        usdValues[publicKey.toString()] = usdValue;\n        if (fairsIsLoaded(publicKeys)) {\n          setForceUpdate((forceUpdate) => !forceUpdate);\n        }\n      }\n    },\n    [publicKeys],\n  );\n  \n  const balanceListItemsMemo = useMemo(() => {\n    return sortedPublicKeys.map((pk) => {\n      return React.memo((props) => {\n        return (\n          <BalanceListItem\n            key={pk.toString()}\n            publicKey={pk}\n            setUsdValue={setUsdValuesCallback}\n          />\n        );\n      });\n    });\n  }, [sortedPublicKeys, setUsdValuesCallback]);\n\n  return (\n    <Paper>\n      <AppBar position=\"static\" color=\"default\" elevation={1}>\n        <Toolbar>\n          <Typography variant=\"h6\" style={{ flexGrow: 1 }} component=\"h2\">\n            {selectedAccount && selectedAccount.name} Balances{' '}\n            {allTokensLoaded && (\n              <>({numberFormat.format(totalUsdValue.toFixed(2))})</>\n            )}\n          </Typography>\n          {selectedAccount &&\n            selectedAccount.name !== 'Main account' &&\n            selectedAccount.name !== 'Hardware wallet' && (\n              <Tooltip title=\"Edit Account Name\" arrow>\n                <IconButton onClick={() => setShowEditAccountNameDialog(true)}>\n                  <EditIcon />\n                </IconButton>\n              </Tooltip>\n            )}\n          <Tooltip title=\"Merge Accounts\" arrow>\n            <IconButton onClick={() => setShowMergeAccounts(true)}>\n              <MergeType />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Add Token\" arrow>\n            <IconButton onClick={() => setShowAddTokenDialog(true)}>\n              <AddIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Sort Accounts\" arrow>\n            <IconButton\n              onClick={() => {\n                switch (sortAccounts) {\n                  case SortAccounts.None:\n                    setSortAccounts(SortAccounts.Ascending);\n                    return;\n                  case SortAccounts.Ascending:\n                    setSortAccounts(SortAccounts.Descending);\n                    return;\n                  case SortAccounts.Descending:\n                    setSortAccounts(SortAccounts.None);\n                    return;\n                  default:\n                    console.error('invalid sort type', sortAccounts);\n                }\n              }}\n            >\n              <SortIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Refresh\" arrow>\n            <IconButton\n              onClick={() => {\n                refreshWalletPublicKeys(wallet);\n                publicKeys.map((publicKey) =>\n                  refreshAccountInfo(wallet.connection, publicKey, true),\n                );\n              }}\n              style={{ marginRight: -12 }}\n            >\n              <RefreshIcon />\n            </IconButton>\n          </Tooltip>\n        </Toolbar>\n      </AppBar>\n      <List disablePadding>\n        {balanceListItemsMemo.map((Memoized) => (\n          <Memoized />\n        ))}\n        {loaded ? null : <LoadingIndicator />}\n      </List>\n      <AddTokenDialog\n        open={showAddTokenDialog}\n        onClose={() => setShowAddTokenDialog(false)}\n      />\n      <EditAccountNameDialog\n        open={showEditAccountNameDialog}\n        onClose={() => setShowEditAccountNameDialog(false)}\n        oldName={selectedAccount ? selectedAccount.name : ''}\n        onEdit={(name) => {\n          setAccountName(selectedAccount.selector, name);\n          setShowEditAccountNameDialog(false);\n        }}\n      />\n      <MergeAccountsDialog\n        open={showMergeAccounts}\n        onClose={() => setShowMergeAccounts(false)}\n      />\n    </Paper>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  address: {\n    textOverflow: 'ellipsis',\n    overflowX: 'hidden',\n  },\n  itemDetails: {\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    marginBottom: theme.spacing(2),\n  },\n  buttonContainer: {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nexport function BalanceListItem({ publicKey, expandable, setUsdValue }) {\n  const wallet = useWallet();\n  const balanceInfo = useBalanceInfo(publicKey);\n  const theme = useTheme()\n  const classes = useStyles();\n  const connection = useConnection();\n  const [open, setOpen] = useState(false);\n  const [, setForceUpdate] = useState(false);\n  // Valid states:\n  //   * undefined => loading.\n  //   * null => not found.\n  //   * else => price is loaded.\n  const [price, setPrice] = useState(undefined);\n  useEffect(() => {\n    if (balanceInfo) {\n      if (balanceInfo.tokenSymbol) {\n        const coin = balanceInfo.tokenSymbol.toUpperCase();\n        // Don't fetch USD stable coins. Mark to 1 USD.\n        if (coin === 'USDT' || coin === 'USDC') {\n          setPrice(1);\n        }\n        // A Serum market exists. Fetch the price.\n        else if (serumMarkets[coin]) {\n          let m = serumMarkets[coin];\n          priceStore\n            .getPrice(connection, m.name)\n            .then((price) => {\n              setPrice(price);\n            })\n            .catch((err) => {\n              console.error(err);\n              setPrice(null);\n            });\n        }\n        // No Serum market exists.\n        else {\n          setPrice(null);\n        }\n      }\n      // No token symbol so don't fetch market data.\n      else {\n        setPrice(null);\n      }\n    }\n  }, [price, balanceInfo, connection]);\n\n  expandable = expandable === undefined ? true : expandable;\n\n  if (!balanceInfo) {\n    return <LoadingIndicator delay={0} />;\n  }\n\n  let { amount, decimals, mint, tokenName, tokenSymbol } = balanceInfo;\n\n  // Fetch and cache the associated token address.\n  if (wallet && wallet.publicKey && mint) {\n    if (\n      associatedTokensCache[wallet.publicKey.toString()] === undefined ||\n      associatedTokensCache[wallet.publicKey.toString()][mint.toString()] ===\n        undefined\n    ) {\n      findAssociatedTokenAddress(wallet.publicKey, mint).then((assocTok) => {\n        let walletAccounts = Object.assign(\n          {},\n          associatedTokensCache[wallet.publicKey.toString()],\n        );\n        walletAccounts[mint.toString()] = assocTok;\n        associatedTokensCache[wallet.publicKey.toString()] = walletAccounts;\n        if (assocTok.equals(publicKey)) {\n          // Force a rerender now that we've cached the value.\n          setForceUpdate((forceUpdate) => !forceUpdate);\n        }\n      });\n    }\n  }\n\n  const isAssociatedToken =\n    wallet &&\n    wallet.publicKey &&\n    mint &&\n    associatedTokensCache[wallet.publicKey.toString()]\n      ? associatedTokensCache[wallet.publicKey.toString()][mint.toString()]\n      : false;\n\n  const subtitle = (\n    <div style={{ display: 'flex', height: '20px', overflow: 'hidden' }}>\n      {isAssociatedToken && (\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            flexDirection: 'column',\n            marginRight: '5px',\n          }}\n        >\n          <FingerprintIcon style={{ width: '20px' }} />\n        </div>\n      )}\n      <StyledTitle\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          flexDirection: 'column',\n        }}\n      >\n        {publicKey.toBase58()}\n      </StyledTitle>\n    </div>\n  );\n\n  const usdValue =\n    price === undefined // Not yet loaded.\n      ? undefined\n      : price === null // Loaded and empty.\n      ? null\n      : ((amount / Math.pow(10, decimals)) * price).toFixed(2); // Loaded.\n      \n  if (setUsdValue && usdValue !== undefined) {\n    setUsdValue(publicKey, usdValue === null ? null : parseFloat(usdValue));\n  }\n\n  return (\n    <>\n      <ListItem  button onClick={() => expandable && setOpen((open) => !open)}>\n        <ListItemIcon>\n          <TokenIcon mint={mint} tokenName={tokenName} size={28} />\n        </ListItemIcon>\n        <div style={{ display: 'flex', flex: 1 }}>\n          <ListItemText\n            primary={\n              <Title color={theme.customPalette.green.light}>\n                {balanceFormat.format(amount / Math.pow(10, decimals))}{' '}\n                {tokenName ?? abbreviateAddress(mint)}\n                {tokenSymbol ? ` (${tokenSymbol})` : null}\n              </Title>\n            }\n            secondary={subtitle}\n            secondaryTypographyProps={{ className: classes.address }}\n          />\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'center',\n              flexDirection: 'column',\n            }}\n          >\n            {price && (\n              <Typography color=\"textSecondary\">\n                {numberFormat.format(usdValue)}\n              </Typography>\n            )}\n          </div>\n        </div>\n        {expandable ? open ? <ExpandLess /> : <ExpandMore /> : <></>}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <BalanceListItemDetails\n          publicKey={publicKey}\n          serumMarkets={serumMarkets}\n          balanceInfo={balanceInfo}\n        />\n      </Collapse>\n    </>\n  );\n}\n\nfunction BalanceListItemDetails({ publicKey, serumMarkets, balanceInfo }) {\n  const urlSuffix = useSolanaExplorerUrlSuffix();\n  const classes = useStyles();\n  const [sendDialogOpen, setSendDialogOpen] = useState(false);\n  const [, setDepositDialogOpen] = useState(false);\n  const [tokenInfoDialogOpen, setTokenInfoDialogOpen] = useState(false);\n  const [exportAccDialogOpen, setExportAccDialogOpen] = useState(false);\n  const [\n    closeTokenAccountDialogOpen,\n    setCloseTokenAccountDialogOpen,\n  ] = useState(false);\n  const wallet = useWallet();\n  const isProdNetwork = useIsProdNetwork();\n  const [swapInfo] = useAsyncData(async () => {\n    if (!showSwapAddress || !isProdNetwork) {\n      return null;\n    }\n    return await swapApiRequest(\n      'POST',\n      'swap_to',\n      {\n        blockchain: 'sol',\n        coin: balanceInfo.mint?.toBase58(),\n        address: publicKey.toBase58(),\n      },\n      { ignoreUserErrors: true },\n    );\n  }, [\n    'swapInfo',\n    isProdNetwork,\n    balanceInfo.mint?.toBase58(),\n    publicKey.toBase58(),\n  ]);\n\n  if (!balanceInfo) {\n    return <LoadingIndicator delay={0} />;\n  }\n\n  let { mint, tokenName, tokenSymbol, owner, amount } = balanceInfo;\n\n  // Only show the export UI for the native SOL coin.\n  const exportNeedsDisplay =\n    mint === null && tokenName === 'SOL' && tokenSymbol === 'SOL';\n\n  const market = tokenSymbol\n    ? serumMarkets[tokenSymbol.toUpperCase()]\n      ? serumMarkets[tokenSymbol.toUpperCase()].publicKey\n      : undefined\n    : undefined;\n\n  return (\n    <>\n      {wallet.allowsExport && (\n        <ExportAccountDialog\n          onClose={() => setExportAccDialogOpen(false)}\n          open={exportAccDialogOpen}\n        />\n      )}\n      <div className={classes.itemDetails}>\n        <div className={classes.buttonContainer}>\n          {!publicKey.equals(owner) && showTokenInfoDialog ? (\n            <Button\n              variant=\"outlined\"\n              color=\"default\"\n              startIcon={<InfoIcon />}\n              onClick={() => setTokenInfoDialogOpen(true)}\n            >\n              Token Info\n            </Button>\n          ) : null}\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            startIcon={<ReceiveIcon />}\n            onClick={() => setDepositDialogOpen(true)}\n          >\n            Receive\n          </Button>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            startIcon={<SendIcon />}\n            onClick={() => setSendDialogOpen(true)}\n          >\n            Send\n          </Button>\n          {mint && amount === 0 ? (\n            <Button\n              variant=\"outlined\"\n              color=\"secondary\"\n              size=\"small\"\n              startIcon={<DeleteIcon />}\n              onClick={() => setCloseTokenAccountDialogOpen(true)}\n            >\n              Delete\n            </Button>\n          ) : null}\n        </div>\n        <Typography variant=\"body2\" className={classes.address}>\n          Deposit Address: {publicKey.toBase58()}\n        </Typography>\n        <Typography variant=\"body2\">\n          Token Name: {tokenName ?? 'Unknown'}\n        </Typography>\n        <Typography variant=\"body2\">\n          Token Symbol: {tokenSymbol ?? 'Unknown'}\n        </Typography>\n        {mint ? (\n          <Typography variant=\"body2\" className={classes.address}>\n            Token Address: {mint.toBase58()}\n          </Typography>\n        ) : null}\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <div>\n            <Typography variant=\"body2\">\n              <Link\n                href={\n                  `https://explorer.solana.com/account/${publicKey.toBase58()}` +\n                  urlSuffix\n                }\n                target=\"_blank\"\n                rel=\"noopener\"\n              >\n                View on Solana\n              </Link>\n            </Typography>\n            {market && (\n              <Typography variant=\"body2\">\n                <Link\n                  href={`https://dex.projectserum.com/#/market/${market}`}\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  View on Serum\n                </Link>\n              </Typography>\n            )}\n            {swapInfo && swapInfo.coin.erc20Contract && (\n              <Typography variant=\"body2\">\n                <Link\n                  href={\n                    `https://etherscan.io/token/${swapInfo.coin.erc20Contract}` +\n                    urlSuffix\n                  }\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  View on Ethereum\n                </Link>\n              </Typography>\n            )}\n          </div>\n          {exportNeedsDisplay && wallet.allowsExport && (\n            <div>\n              <Typography variant=\"body2\">\n                <Link href={'#'} onClick={(e) => setExportAccDialogOpen(true)}>\n                  Export\n                </Link>\n              </Typography>\n            </div>\n          )}\n        </div>\n      </div>\n      <SendDialog\n        open={sendDialogOpen}\n        onClose={() => setSendDialogOpen(false)}\n        balanceInfo={balanceInfo}\n        publicKey={publicKey}\n      />\n      {/* <DepositDialog\n        open={depositDialogOpen}\n        onClose={() => setDepositDialogOpen(false)}\n        balanceInfo={balanceInfo}\n        publicKey={publicKey}\n        swapInfo={swapInfo}\n      /> */}\n      <TokenInfoDialog\n        open={tokenInfoDialogOpen}\n        onClose={() => setTokenInfoDialogOpen(false)}\n        balanceInfo={balanceInfo}\n        publicKey={publicKey}\n      />\n      <CloseTokenAccountDialog\n        open={closeTokenAccountDialogOpen}\n        onClose={() => setCloseTokenAccountDialogOpen(false)}\n        balanceInfo={balanceInfo}\n        publicKey={publicKey}\n      />\n    </>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport DialogForm from './DialogForm';\nimport { LedgerWalletProvider } from '../../../utils/walletProvider/ledger';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { useSnackbar } from 'notistack';\nimport {\n  RowContainer,\n  Title,\n  VioletButton,\n  WhiteButton,\n} from '../../commonStyles';\nimport { FormControl, Select, MenuItem, useTheme } from '@mui/material';\nimport { DERIVATION_PATH } from '../../../utils/walletProvider/localStorage';\nimport { BalanceListItem } from '../../../components/BalancesList';\n\nconst AddHardwareView = {\n  Splash: 0,\n  Accounts: 1,\n  Confirm: 2,\n};\n\nexport const DerivationPathMenuItem = {\n  Deprecated: 0,\n  Bip44: 1,\n  Bip44Change: 2,\n  Bip44Root: 3, // Ledger only.\n};\n\nexport function toDerivationPath(dPathMenuItem) {\n  switch (dPathMenuItem) {\n    case DerivationPathMenuItem.Deprecated:\n      return DERIVATION_PATH.deprecated;\n    case DerivationPathMenuItem.Bip44:\n      return DERIVATION_PATH.bip44;\n    case DerivationPathMenuItem.Bip44Change:\n      return DERIVATION_PATH.bip44Change;\n    case DerivationPathMenuItem.Bip44Root:\n      return DERIVATION_PATH.bip44Root;\n    default:\n      throw new Error(`invalid derivation path: ${dPathMenuItem}`);\n  }\n}\n\nexport default function AddHardwareWalletDialog({ open, onAdd, onClose }) {\n  const [view, setView] = useState(AddHardwareView.Splash);\n  const [hardwareAccount, setHardwareAccount] = useState(null);\n  return (\n    <DialogForm\n      height=\"auto\"\n      padding=\"2rem 0\"\n      onClose={onClose}\n      open={open}\n      onEnter={() => {}}\n      fullWidth\n    >\n      {view === AddHardwareView.Splash ? (\n        <AddHardwareWalletSplash\n          onClose={onClose}\n          onContinue={() => setView(AddHardwareView.Accounts)}\n        />\n      ) : view === AddHardwareView.Accounts ? (\n        <LedgerAccounts\n          onContinue={(account) => {\n            setHardwareAccount(account);\n            setView(AddHardwareView.Confirm);\n          }}\n          open={open}\n          onClose={onClose}\n        />\n      ) : (\n        <ConfirmHardwareWallet\n          account={hardwareAccount}\n          onDone={() => {\n            onAdd(hardwareAccount);\n            onClose();\n            setView(AddHardwareView.Splash);\n          }}\n          onBack={() => {\n            setView(AddHardwareView.Accounts);\n          }}\n        />\n      )}\n    </DialogForm>\n  );\n}\n\nfunction ConfirmHardwareWallet({ account, onDone, onBack }) {\n  const [didConfirm, setDidConfirm] = useState(false);\n  const theme = useTheme();\n\n  useEffect(() => {\n    if (!didConfirm) {\n      account.provider\n        .confirmPublicKey()\n        .then(() => setDidConfirm(true))\n        .catch((err) => {\n          console.error('Error confirming', err);\n          // onBack();\n        });\n    }\n  });\n\n  return (\n    <>\n      <RowContainer>\n        <Title>Confirm your wallet address</Title>\n      </RowContainer>\n      <RowContainer direction=\"column\">\n        <RowContainer direction=\"column\" margin=\"2rem 0\">\n          <Title>\n            Check your ledger and confirm the address displayed is the address\n            chosen. Then click \"done\".\n          </Title>\n          <RowContainer margin=\"1rem 0\">\n            <Title>{account.publicKey.toString()}</Title>\n          </RowContainer>\n        </RowContainer>\n        <RowContainer justify=\"space-between\" width=\"90%\">\n          <WhiteButton theme={theme} width=\"calc(50% - .5rem)\" onClick={onBack}>\n            Close\n          </WhiteButton>\n          <VioletButton\n            width=\"calc(50% - .5rem)\"\n            theme={theme}\n            type=\"submit\"\n            color=\"primary\"\n            disabled={!didConfirm}\n            onClick={onDone}\n          >\n            Add\n          </VioletButton>\n        </RowContainer>\n      </RowContainer>\n    </>\n  );\n}\n\nfunction AddHardwareWalletSplash({ onContinue, onClose }) {\n  const theme = useTheme();\n  return (\n    <RowContainer direction=\"column\" width=\"90%\">\n      <RowContainer>\n        <Title style={{ fontSize: '2.4rem' }}>\n          Confirm your wallet address\n        </Title>\n      </RowContainer>\n      <RowContainer margin=\"2rem 0 0 0\">\n        <RowContainer>\n          <Title>\n            Connect your ledger and open the Solana application. When you are\n            ready, click \"continue\".\n          </Title>\n        </RowContainer>\n      </RowContainer>\n      <RowContainer margin=\"2rem 0 0 0\" justify=\"space-between\">\n        <WhiteButton theme={theme} width=\"calc(50% - .5rem)\" onClick={onClose}>\n          Close\n        </WhiteButton>\n        <VioletButton\n          width=\"calc(50% - .5rem)\"\n          theme={theme}\n          type=\"submit\"\n          color=\"primary\"\n          onClick={onContinue}\n        >\n          Continue\n        </VioletButton>\n      </RowContainer>\n    </RowContainer>\n  );\n}\n\nexport function AccountsSelector({\n  showRoot,\n  showDeprecated,\n  accounts,\n  dPathMenuItem,\n  setDPathMenuItem,\n  onClick,\n}) {\n  return (\n    <>\n      <RowContainer width=\"90%\" justify=\"space-between\">\n        <Title variant=\"h5\" gutterBottom>\n          Derivable Accounts\n        </Title>\n        <FormControl variant=\"outlined\">\n          <Select\n            value={dPathMenuItem}\n            onChange={(e) => {\n              setDPathMenuItem(e.target.value);\n            }}\n          >\n            {showRoot && (\n              <MenuItem value={DerivationPathMenuItem.Bip44Root}>\n                {`m/44'/501'`}\n              </MenuItem>\n            )}\n            <MenuItem value={DerivationPathMenuItem.Bip44}>\n              {`m/44'/501'/0'`}\n            </MenuItem>\n            <MenuItem value={DerivationPathMenuItem.Bip44Change}>\n              {`m/44'/501'/0'/0'`}\n            </MenuItem>\n            {showDeprecated && (\n              <MenuItem value={DerivationPathMenuItem.Deprecated}>\n                {`m/501'/0'/0/0 (deprecated)`}\n              </MenuItem>\n            )}\n          </Select>\n        </FormControl>\n      </RowContainer>\n      <RowContainer direction=\"column\" margin=\"2rem 0 0 0\">\n        {accounts.map((acc) => {\n          return (\n            // @ts-ignore\n            <div onClick={onClick ? () => onClick(acc) : {}}>\n              <BalanceListItem\n                key={acc.publicKey.toString()}\n                expandable={false}\n                publicKey={acc.publicKey}\n                setUsdValue={() => {}}\n              />\n            </div>\n          );\n        })}\n      </RowContainer>\n    </>\n  );\n}\n\nfunction LedgerAccounts({ onContinue, onClose, open }) {\n  const [dPathMenuItem, setDPathMenuItem] = useState(\n    DerivationPathMenuItem.Bip44Root,\n  );\n  const { enqueueSnackbar } = useSnackbar();\n  const [accounts, setAccounts] = useState(null);\n  const onClick = (provider) => {\n    onContinue({\n      provider,\n      publicKey: provider.pubKey,\n      derivationPath: provider.derivationPath,\n      account: provider.account,\n      change: provider.change,\n    });\n  };\n  useEffect(() => {\n    if (open) {\n      const fetch = async () => {\n        let accounts: any = [];\n        if (dPathMenuItem === DerivationPathMenuItem.Bip44Root) {\n          let provider = new LedgerWalletProvider({\n            derivationPath: toDerivationPath(dPathMenuItem),\n          });\n          // @ts-ignore\n\n          accounts.push(await provider.init());\n        } else {\n          setAccounts(null);\n          // Loading in parallel makes the ledger upset. So do it serially.\n          for (let k = 0; k < 10; k += 1) {\n            let provider = new LedgerWalletProvider({\n              derivationPath: toDerivationPath(dPathMenuItem),\n              account: k,\n            });\n            // @ts-ignore\n            accounts.push(await provider.init());\n          }\n        }\n        setAccounts(accounts);\n      };\n      fetch().catch((err) => {\n        console.log(`received error when attempting to connect ledger: ${err}`);\n        if (err && err.statusCode === 0x6804) {\n          enqueueSnackbar('Unlock ledger device', { variant: 'error' });\n          onClose();\n        }\n      });\n    }\n  }, [dPathMenuItem, enqueueSnackbar, open, onClose]);\n\n  return (\n    <>\n      {accounts === null ? (\n        <div style={{ padding: '24px' }}>\n          <Title align=\"center\">\n            Loading accounts from your hardware wallet\n          </Title>\n          <CircularProgress\n            style={{\n              display: 'block',\n              marginLeft: 'auto',\n              marginRight: 'auto',\n              marginTop: '1rem',\n            }}\n          />\n        </div>\n      ) : (\n        <AccountsSelector\n          showRoot={true}\n          showDeprecated={true}\n          onClick={onClick}\n          accounts={accounts}\n          setDPathMenuItem={setDPathMenuItem}\n          dPathMenuItem={dPathMenuItem}\n        />\n      )}\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport DialogForm from './DialogForm';\nimport { useWallet } from '../../../utils/wallet';\nimport { checkIsCorrectPassword } from '../../../utils/wallet-seed';\nimport { Row, RowContainer, Title, VioletButton } from '../../commonStyles';\nimport { InputWithEye, TextareaWithCopy } from '../../../components/Input';\nimport { useTheme } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useCallAsync } from '../../../utils/notifications';\nimport { BtnCustom } from '../../../components/BtnCustom';\n\nexport default function ExportAccountDialog({ open, onClose }) {\n  const wallet = useWallet();\n  const theme = useTheme();\n  const callAsync = useCallAsync();\n\n  const [isHidden, setIsHidden] = useState(true);\n  const [password, setPassword] = useState('');\n  const [keyOutput, setKeyOutput] = useState('');\n\n  const submit = () => {\n    callAsync(checkIsCorrectPassword(password), {\n      progressMessage: null,\n      successMessage: null,\n      onSuccess: () => {\n        setKeyOutput(`[${Array.from(wallet.provider.account.secretKey)}]`);\n      },\n      onError: () => {},\n    });\n  };\n\n  const handleKeyDown = (event: any) => {\n    if (event.key === 'Enter') {\n      submit();\n    }\n  };\n\n  return (\n    <DialogForm\n      open={open}\n      onClose={onClose}\n      height=\"auto\"\n      padding=\"2rem 0\"\n      onEnter={() => {\n        setPassword('');\n        setKeyOutput('');\n      }}\n    >\n      <BtnCustom\n        borderRadius=\"50%\"\n        borderWidth=\"0\"\n        style={{\n          position: 'absolute',\n          width: '3rem',\n          height: '3rem',\n          right: '2rem',\n          top: '2rem',\n          color: theme.customPalette.red.main,\n        }}\n        onClick={onClose}\n      >\n        <CloseIcon style={{ width: '100%', height: '100%' }} />\n      </BtnCustom>\n      <RowContainer width=\"90%\" justify=\"flex-start\" margin=\"2rem 0\">\n        <Title>\n          Enter your password to unlock the private key for this account\n        </Title>\n      </RowContainer>\n\n      <RowContainer width=\"90%\" justify={'space-between'} margin=\"0 0 2rem 0\">\n        <Row width=\"calc(70% -.5rem)\">\n          <InputWithEye\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            placeholder={'Password'}\n            onEyeClick={() => setIsHidden(!isHidden)}\n            type={isHidden ? 'password' : 'text'}\n            showPassword={!isHidden}\n            onKeyDown={handleKeyDown}\n            containerStyle={{ width: '100%' }}\n          />\n        </Row>\n        <VioletButton\n          theme={theme}\n          width={'calc(30% - .5rem)'}\n          onClick={() => submit()}\n        >\n          Confirm\n        </VioletButton>\n      </RowContainer>\n\n      <RowContainer width=\"90%\">\n        <TextareaWithCopy\n          value={keyOutput}\n          height={'17.2rem'}\n          placeholder={'***'}\n          style={{ fontSize: '1.3rem', overflowY: 'auto' }}\n        />\n      </RowContainer>\n    </DialogForm>\n  );\n}\n\nexport function ExportMnemonicDialog({ open, onClose }) {\n  // for export no need for password\n  const [isHidden, setIsHidden] = useState(true);\n  const [password, setPassword] = useState('');\n  const [mnemonic, setMnemonic] = useState('');\n  const theme = useTheme();\n  const callAsync = useCallAsync();\n\n  const submit = () => {\n    callAsync(checkIsCorrectPassword(password), {\n      onSuccess: (res) => {\n        setMnemonic(res.mnemonic);\n      },\n      onError: () => {},\n      progressMessage: null,\n      successMessage: null,\n    });\n  };\n\n  const handleKeyDown = (event: any) => {\n    if (event.key === 'Enter') {\n      submit();\n    }\n  };\n\n  return (\n    <DialogForm\n      open={open}\n      onClose={onClose}\n      height=\"auto\"\n      padding=\"2rem 0\"\n      onEnter={() => {\n        setMnemonic('');\n        setPassword('');\n      }}\n    >\n      <BtnCustom\n        borderRadius=\"50%\"\n        borderWidth=\"0\"\n        style={{\n          position: 'absolute',\n          width: '3rem',\n          height: '3rem',\n          right: '2rem',\n          top: '2rem',\n          color: theme.customPalette.red.main,\n        }}\n        onClick={onClose}\n      >\n        <CloseIcon style={{ width: '100%', height: '100%' }} />\n      </BtnCustom>\n      <RowContainer width=\"90%\" justify=\"flex-start\" margin=\"2rem 0\">\n        <Title>\n          Enter your password to unlock the seed phrase for this wallet\n        </Title>\n      </RowContainer>\n\n      <RowContainer width=\"90%\" justify={'space-between'} margin=\"0 0 2rem 0\">\n        <Row width=\"calc(70% -.5rem)\">\n          <InputWithEye\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            placeholder={'Password'}\n            onEyeClick={() => setIsHidden(!isHidden)}\n            onKeyDown={handleKeyDown}\n            type={isHidden ? 'password' : 'text'}\n            showPassword={!isHidden}\n            containerStyle={{ width: '100%' }}\n          />\n        </Row>\n        <VioletButton\n          theme={theme}\n          width={'calc(30% - .5rem)'}\n          onClick={() => submit()}\n        >\n          Confirm\n        </VioletButton>\n      </RowContainer>\n\n      <RowContainer width=\"90%\">\n        <TextareaWithCopy\n          value={mnemonic}\n          height={'11.4rem'}\n          placeholder={'***'}\n          style={{ fontSize: '1.3rem', overflowY: 'auto' }}\n        />\n      </RowContainer>\n    </DialogForm>\n  );\n}\n","import React, { useState } from 'react';\nimport DialogForm from './DialogForm';\nimport { forgetWallet } from '../../../utils/wallet-seed';\nimport {\n  Input,\n  RedFilledButton,\n  RowContainer,\n  Title,\n  WhiteButton,\n} from '../../commonStyles';\nimport { useTheme } from '@mui/material';\nimport AttentionComponent from '../../../components/Attention';\nimport FakeInputs from '../../../components/FakeInputs';\n\nexport default function DeleteMnemonicDialog({ open, onClose, openExportMnemonicPopup }) {\n  const [deleteCheck, setDeleteCheck] = useState('');\n  const theme = useTheme();\n\n  return (\n    <>\n      <DialogForm\n        open={open}\n        onClose={onClose}\n        fullWidth\n        height=\"auto\"\n        padding=\"2rem 0\"\n        onEnter={() => {\n          setDeleteCheck('');\n        }}\n      >\n        <FakeInputs />\n        <RowContainer width=\"90%\" justify=\"flex-start\" margin=\"0 0 2rem 0\">\n          <Title fontSize=\"2.4rem\">Forget wallet for this device</Title>\n        </RowContainer>\n        <RowContainer width=\"90%\" direction=\"column\">\n          <RowContainer justify=\"flex-start\" margin=\"2rem 0 0 0\">\n            <Title style={{ textAlign: 'left' }}>\n              You will not be able to recover the current accounts without the\n              seed phrase, and the account private key. This action will delete\n              all current accounts from your browser.\n            </Title>\n          </RowContainer>\n          <RowContainer margin=\"2rem 0 0 0\">\n            <AttentionComponent\n              blockHeight=\"8rem\"\n              text={\n                'To prevent loss of funds, please ensure you have the seed phrase and the private key for all current accounts.'\n              }\n            />\n          </RowContainer>\n          <RowContainer margin=\"2rem 0 0 0\">\n            <RedFilledButton\n              theme={theme}\n              background={theme.customPalette.orange.light}\n              onClick={() => {\n                openExportMnemonicPopup()\n              }}\n              width={'calc(50%)'}\n            >\n              Export Seed Phrase\n            </RedFilledButton>\n          </RowContainer>\n          <RowContainer margin=\"2rem 0 0 0\">\n            <Input\n              type=\"text\"\n              placeholder={`Please, type FORGET to confirm`}\n              value={deleteCheck}\n              onChange={(e) => setDeleteCheck(e.target.value)}\n            />\n          </RowContainer>\n          <RowContainer margin=\"2rem 0 0 0\" justify=\"space-between\">\n            <WhiteButton\n              theme={theme}\n              width={'calc(50% - .5rem)'}\n              onClick={onClose}\n            >\n              Close\n            </WhiteButton>\n            <RedFilledButton\n              theme={theme}\n              onClick={() => {\n                forgetWallet();\n                onClose();\n              }}\n              width={'calc(50% - .5rem)'}\n              disabled={deleteCheck !== 'FORGET'}\n            >\n              Forget\n            </RedFilledButton>\n          </RowContainer>\n        </RowContainer>\n      </DialogForm>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport {\n  Button,\n  Collapse,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  Paper,\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { DoneAll, ExpandLess, ExpandMore } from '@mui/icons-material';\nimport { useConnectedWallets } from '../../utils/connected-wallets';\nimport { useWalletSelector } from '../../utils/wallet';\nimport DialogForm from '../../pages/Wallet/components/DialogForm';\nimport { RowContainer } from '../commonStyles';\n\nconst StyledPaper = styled(({ ...props }) => <Paper {...props} />)`\n  height: auto;\n  min-height: 70rem;\n  padding: 2rem 4rem;\n  width: 35rem;\n  background: #222429;\n  border: 0.1rem solid #3a475c;\n  box-shadow: 0px 0px 16px rgb(125 125 131, 10%);\n  border-radius: 2rem;\n`;\n\nconst Text = styled.span`\n  font-size: ${(props) => props.fontSize || '1.5rem'};\n  padding-bottom: ${(props) => props.paddingBottom || ''};\n  text-transform: none;\n  font-family: ${(props) => props.fontFamily || 'Avenir Next Medium'};\n  color: ${(props) => props.color || '#ecf0f3'};\n`;\n\nexport default function ConnectionsList({ theme, close, open }) {\n  const connectedWallets = useConnectedWallets();\n  console.log('connectedWallets', connectedWallets);\n  return (\n    <DialogForm\n      theme={theme}\n      PaperComponent={StyledPaper}\n      fullScreen={false}\n      onClose={() => close()}\n      maxWidth={'md'}\n      open={open}\n      aria-labelledby=\"responsive-dialog-title\"\n    >\n      <RowContainer>\n        <Text fontSize={'2rem'}>Connected Dapps</Text>\n      </RowContainer>\n      <List disablePadding>\n        {Object.entries(connectedWallets).map(([origin, connectedWallet]) => (\n          <ConnectionsListItem\n            origin={origin}\n            connectedWallet={connectedWallet}\n            key={origin}\n          />\n        ))}\n      </List>\n    </DialogForm>\n  );\n}\n\nconst ICON_SIZE = 28;\nconst IMAGE_SIZE = 24;\n\nconst ItemDetails = styled.div`\n  margin-left: 24px;\n  margin-right: 24px;\n  margin-bottom: 16px;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  margin-top: 8px;\n  margin-bottom: 8px;\n`;\n\nconst StyledListItemIcon = styled(ListItemIcon)`\n  background-color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: ${ICON_SIZE}px;\n  width: ${ICON_SIZE}px;\n  border-radius: ${ICON_SIZE / 2}px;\n`;\n\nconst ListItemImage = styled.img`\n  height: ${IMAGE_SIZE}px;\n  width: ${IMAGE_SIZE}px;\n  border-radius: ${IMAGE_SIZE / 2}px;\n`;\n\nfunction ConnectionsListItem({ origin, connectedWallet }) {\n  const [open, setOpen] = useState(false);\n  // TODO better way to get high res icon?\n  const appleIconUrl = origin + '/apple-touch-icon.png';\n  const faviconUrl = origin + '/favicon.ico';\n  const [iconUrl, setIconUrl] = useState(appleIconUrl);\n  const { accounts } = useWalletSelector();\n  // TODO better way to do this\n  const account = accounts.find(\n    (account) => account.address.toBase58() === connectedWallet.publicKey,\n  );\n\n  const setAutoApprove = (autoApprove) => {\n    chrome.storage.local.get('connectedWallets', (result) => {\n      result.connectedWallets[origin].autoApprove = autoApprove;\n      chrome.storage.local.set({ connectedWallets: result.connectedWallets });\n    });\n  };\n\n  const disconnectWallet = () => {\n    chrome.storage.local.get('connectedWallets', (result) => {\n      delete result.connectedWallets[origin];\n      chrome.storage.local.set({ connectedWallets: result.connectedWallets });\n    });\n  };\n\n  return (\n    <>\n      <ListItemButton onClick={() => setOpen((open) => !open)}>\n        <StyledListItemIcon>\n            <ListItemImage\n              src={iconUrl}\n              onError={() => setIconUrl(faviconUrl)}\n              alt=\"\"\n            />\n        </StyledListItemIcon>\n        <div style={{ display: 'flex', flex: 1 }}>\n          <ListItemText primary={origin} secondary={account.name} />\n        </div>\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItemButton>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <ItemDetails>\n          <ButtonContainer>\n            <Button\n              variant={connectedWallet.autoApprove ? 'contained' : 'outlined'}\n              color=\"primary\"\n              size=\"small\"\n              startIcon={<DoneAll />}\n              onClick={() => setAutoApprove(!connectedWallet.autoApprove)}\n            >\n              {connectedWallet.autoApprove ? 'Auto-Approved' : 'Auto-Approve'}\n            </Button>\n            <Button\n              variant=\"outlined\"\n              color=\"secondary\"\n              size=\"small\"\n              startIcon={<DeleteIcon />}\n              onClick={disconnectWallet}\n            >\n              Disconnect\n            </Button>\n          </ButtonContainer>\n        </ItemDetails>\n      </Collapse>\n    </>\n  );\n}\n","import React from 'react';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport ConnectionsList from './ConnectionsList';\n\nexport default function ConnectionsPage({ theme, close, open }) {\n  return (\n    <Container>\n      <Grid container>\n        <Grid item xs={12}>\n          <ConnectionsList theme={theme} close={() => close()} open={open} />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useTheme } from '@mui/material';\nimport { BtnCustom } from '../../../components/BtnCustom';\nimport { useWalletSelector } from '../../../utils/wallet';\nimport {\n  RowContainer,\n  Card,\n  Title,\n  StyledRadio,\n  Row,\n  Legend,\n} from '../../commonStyles';\nimport { GreyTitle } from './AssetsTable';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport AddIcon from '../../../images/addIcon.svg';\nimport ImportHardwareIcon from '../../../images/importHardware.svg';\nimport ExportMnemonicIcon from '../../../images/exportMnemonic.svg';\nimport DeleteAccountIcon from '../../../images/deleteAccount.svg';\nimport MergeAccountsIcon from '../../../images/merge.svg';\nimport ManageConnections from '../../../images/connections.svg';\n\nimport AddAccountPopup from './AddAccountPopup';\nimport AddHardwareWalletPopup from './AddHardwareWalletPopup';\nimport ExportAccount, { ExportMnemonicDialog } from './ExportAccount';\nimport ForgetWallet from './ForgetWallet';\nimport MergeAccountsDialog from '../../../components/MergeAccountsDialog';\nimport ConnectionsPage from '../../Connections';\n// import { isExtension } from '../../../utils/utils';\n\nconst ExportPrivateKeyButton = styled(BtnCustom)`\n  @media (max-width: 540px) {\n    font-size: 1.2rem;\n  }\n`;\n\nexport const StyledCard = styled(({ isFromPopup, ...props }) => (\n  <Card {...props} />\n))`\n  position: absolute;\n  top: 100%;\n  ${(props) => (props.isFromPopup ? 'right: 0' : 'left: 0')};\n  width: 28rem;\n  height: auto;\n  display: none;\n  z-index: 2;\n  background: #222429;\n  border: 0.1rem solid #3a475c;\n  box-shadow: 0px 0px 16px rgba(125, 125, 131, 0.1);\n\n  @media (max-width: 540px) {\n    width: 35rem;\n  }\n`;\n\nconst RowWithSelector = styled(({ isFromPopup, ...props }) => (\n  <Row {...props} />\n))`\n  position: relative;\n  bottom: ${(props) => (props.isFromPopup ? '0' : '1rem')};\n  padding: ${(props) => (props.isFromPopup ? '2rem' : '1rem 3rem 2rem 0')};\n  left: ${(props) => (props.isFromPopup ? '2rem' : '0')};\n\n  &:hover #accountSelector {\n    display: flex;\n  }\n\n  @media (max-width: 540px) {\n    padding: 1rem 0;\n  }\n`;\n\nexport const WalletActionButton = ({ theme, openPopup, icon, buttonText }) => {\n  return (\n    <BtnCustom\n      textTransform={'capitalize'}\n      borderWidth=\"0\"\n      height={'100%'}\n      padding={'1.2rem 0 1.2rem 1rem'}\n      style={{ justifyContent: 'flex-start' }}\n      btnWidth=\"100%\"\n      onClick={openPopup}\n    >\n      <img\n        src={icon}\n        alt={buttonText}\n        style={{ marginRight: '1rem', width: '2rem', height: '2rem' }}\n      />\n      <GreyTitle theme={theme}>{buttonText}</GreyTitle>\n    </BtnCustom>\n  );\n};\n\nconst AccountsSelector = ({\n  accountNameSize = '2.4rem',\n  isFromPopup = false,\n}: {\n  accountNameSize?: string;\n  isFromPopup?: boolean;\n}) => {\n  const [isAddAccountOpen, setIsAddAccountOpen] = useState(false);\n  const [\n    isAddHardwareWalletDialogOpen,\n    setIsAddHardwareWalletDialogOpen,\n  ] = useState(false);\n  const [isExportMnemonicOpen, setIsExportMnemonicOpen] = useState(false);\n  const [isExportAccountOpen, setIsExportAccountOpen] = useState(false);\n  const [isDeleteAccountOpen, setIsDeleteAccountOpen] = useState(false);\n  const [isMergeAccountsOpen, setIsMergeAccoutsOpen] = useState(false);\n  const [isManageConnectiosOpen, setIsManageConnectiosOpen] = useState(false);\n\n  const theme = useTheme();\n  const {\n    accounts,\n    hardwareWalletAccount,\n    setHardwareWalletAccount,\n    setWalletSelector,\n    addAccount,\n  } = useWalletSelector();\n\n  const accountsToShow = hardwareWalletAccount\n    ? accounts.concat(hardwareWalletAccount)\n    : accounts;\n  const selectedAccount = accounts.find((a) => a.isSelected);\n\n  return (\n    <RowWithSelector isFromPopup={isFromPopup}>\n      <Title\n        fontSize={accountNameSize}\n        fontFamily=\"Avenir Next Demi\"\n        style={{\n          textTransform: 'capitalize',\n          marginRight: '1rem',\n          whiteSpace: 'nowrap',\n        }}\n      >\n        {selectedAccount && selectedAccount.name}\n      </Title>\n      <ExpandMoreIcon fontSize=\"large\" />\n\n      <StyledCard isFromPopup={isFromPopup} id=\"accountSelector\">\n        <RowContainer align=\"flex-start\" direction=\"column\" padding=\"1.6rem 0\">\n          <RowContainer padding=\"0 1.6rem\" margin=\"1rem 0 0 0\">\n            <Title\n              fontFamily=\"Avenir Next Demi\"\n              fontSize=\"1.4rem\"\n              style={{ whiteSpace: 'nowrap', paddingRight: '1rem' }}\n            >\n              Your Accounts\n            </Title>\n            <Legend />\n          </RowContainer>\n          <RowContainer\n            style={{\n              display: 'block',\n              borderBottom: theme.customPalette.border.new,\n              maxHeight: '30rem',\n              overflowY: 'auto',\n            }}\n            direction=\"column\"\n            margin=\"0 0 1rem 0\"\n            padding=\"0 1.6rem 0rem 1.6rem\"\n          >\n            {accountsToShow.map(({ isSelected, name, selector }, i) => {\n              return (\n                <RowContainer\n                  key={`${name}-${i}`}\n                  direction=\"row\"\n                  align={'center'}\n                  justify={isFromPopup ? 'flex-start' : 'space-between'}\n                  padding=\".5rem 1.6rem .5rem 0\"\n                  style={{\n                    cursor: 'pointer',\n                    borderBottom:\n                      accounts.length === i + 1\n                        ? 'none'\n                        : theme.customPalette.border.new,\n                  }}\n                  onClick={() => {\n                    if (!isSelected) {\n                      setWalletSelector(selector);\n                    }\n                  }}\n                >\n                  <Row justify=\"flex-start\">\n                    <StyledRadio theme={theme} checked={isSelected} />\n                    <Title\n                      style={{\n                        width: '100%',\n                        overflow: 'hidden',\n                        whiteSpace: 'nowrap',\n                        textOverflow: 'ellipsis ',\n                      }}\n                    >\n                      {name && name.length > 14\n                        ? name.slice(0, 10) + '...'\n                        : name}\n                    </Title>\n                  </Row>\n                  {!isFromPopup && (\n                    <Row>\n                      <ExportPrivateKeyButton\n                        btnWidth=\"auto\"\n                        textTransform=\"capitalize\"\n                        color={theme.customPalette.blue.serum}\n                        borderWidth=\"0\"\n                        fontFamily=\"Avenir Next Demi\"\n                        fontSize=\"1rem\"\n                        onClick={() => setIsExportAccountOpen(true)}\n                      >\n                        Export Private Key\n                      </ExportPrivateKeyButton>\n                    </Row>\n                  )}\n                </RowContainer>\n              );\n            })}\n          </RowContainer>\n          <RowContainer padding=\"0 1.6rem\" direction=\"column\">\n            <WalletActionButton\n              theme={theme}\n              icon={AddIcon}\n              buttonText={'Add Account'}\n              openPopup={() => setIsAddAccountOpen(true)}\n            />\n            <WalletActionButton\n              theme={theme}\n              icon={ImportHardwareIcon}\n              buttonText={'Import Hardware Wallet'}\n              openPopup={() => setIsAddHardwareWalletDialogOpen(true)}\n            />\n            <WalletActionButton\n              theme={theme}\n              icon={MergeAccountsIcon}\n              buttonText={'Merge Accounts'}\n              openPopup={() => setIsMergeAccoutsOpen(true)}\n            />\n            <WalletActionButton\n              theme={theme}\n              icon={ExportMnemonicIcon}\n              buttonText={'Export Seed Phrase'}\n              openPopup={() => setIsExportMnemonicOpen(true)}\n            />\n            {/* {isExtension && ( */}\n            <WalletActionButton\n              theme={theme}\n              icon={ManageConnections}\n              buttonText={'View Connected Sites'}\n              openPopup={() => {\n                setIsManageConnectiosOpen(true);\n              }}\n            />\n            {/* )} */}\n\n            <WalletActionButton\n              theme={theme}\n              icon={DeleteAccountIcon}\n              buttonText={'Forget wallet for this device'}\n              openPopup={() => setIsDeleteAccountOpen(true)}\n            />\n          </RowContainer>\n        </RowContainer>\n      </StyledCard>\n\n      <AddAccountPopup\n        open={isAddAccountOpen}\n        onAdd={({ name, importedAccount }) => {\n          addAccount({ name, importedAccount });\n          setWalletSelector({\n            walletIndex: importedAccount\n              ? undefined\n              : accounts.filter((acc) => acc.selector.walletIndex !== undefined)\n                  .length,\n            importedPubkey: importedAccount\n              ? importedAccount.publicKey.toString()\n              : undefined,\n            ledger: false,\n          });\n          setIsAddAccountOpen(false);\n        }}\n        onClose={() => setIsAddAccountOpen(false)}\n      />\n\n      <AddHardwareWalletPopup\n        open={isAddHardwareWalletDialogOpen}\n        onClose={() => setIsAddHardwareWalletDialogOpen(false)}\n        onAdd={({ publicKey, derivationPath, account, change }) => {\n          setHardwareWalletAccount({\n            name: 'Hardware wallet',\n            publicKey,\n            importedAccount: publicKey.toString(),\n            ledger: true,\n            derivationPath,\n            account,\n            change,\n          });\n          setWalletSelector({\n            walletIndex: undefined,\n            importedPubkey: publicKey.toString(),\n            ledger: true,\n            derivationPath,\n            account,\n            change,\n          });\n        }}\n      />\n      <MergeAccountsDialog\n        open={isMergeAccountsOpen}\n        onClose={() => setIsMergeAccoutsOpen(false)}\n      />\n      <ExportMnemonicDialog\n        open={isExportMnemonicOpen}\n        onClose={() => setIsExportMnemonicOpen(false)}\n      />\n      <ExportAccount\n        open={isExportAccountOpen}\n        onClose={() => setIsExportAccountOpen(false)}\n      />\n      <ForgetWallet\n        open={isDeleteAccountOpen}\n        openExportMnemonicPopup={() => setIsExportMnemonicOpen(true)}\n        onClose={() => setIsDeleteAccountOpen(false)}\n      />\n      <ConnectionsPage\n        theme={theme}\n        close={setIsManageConnectiosOpen}\n        open={isManageConnectiosOpen}\n      />\n    </RowWithSelector>\n  );\n};\n\nexport default AccountsSelector;\n","export const showTokenInfoDialog = !!localStorage.getItem(\n  'showTokenInfoDialog',\n);\n\nexport const showSwapAddress = true;\nexport const MASTER_BUILD = process.env.MASTER_BUILD\n"],"names":["SwapApiError","Error","constructor","msg","status","super","this","name","async","swapApiRequest","method","path","body","ignoreUserErrors","arguments","length","undefined","headers","params","cache","JSON","stringify","resp","fetch","json","success","error","result","handleSwapApiResponse","useSwapApiGet","options","useAsyncData","TokenIcon","_ref","mint","tokenLogoUri","tokenName","size","style","hasError","setHasError","useState","TokenInstructions","WRAPPED_SOL_MINT","toString","CCAI_MINT","CoinPlaceholder","_jsx","src","title","alt","width","height","borderRadius","onError","FeeContentText","ethFee","ethPrice","warning","prefix","bold","usdFeeEstimate","_jsxs","Title","color","marginBottom","fontWeight","children","toFixed","EthFeeEstimate","_ref2","ethFeeData","insufficientEthBalance","ethFeeEstimate","loaded","setEthPrice","connection","useConnection","useEffect","m","serumMarkets","priceStore","getPrice","then","DialogContentText","Array","isArray","approveFee","swapFee","margin","StyledCard","styled","isFromPopup","props","Card","StyledTd","div","ActivitiesStyledCard","ButtonsContainer","RowContainer","theme","urlSuffix","selectToken","setSendDialogOpen","setDepositDialogOpen","publicKey","tokenSymbol","tokensData","quote","padding","direction","paddingLeft","paddingRight","VioletButton","hoverBackground","backgroundColor","border","justifyContent","whiteSpace","onClick","Receive","marginRight","Send","component","target","rel","href","toBase58","BlueExplorer","disabled","has","toUpperCase","TradeIcon","TableContainer","isActive","Row","customPalette","grey","background","new","StyledTable","table","HeadRow","RefreshButton","BtnCustom","AddTokenStyledButton","ImgContainer","img","AddTokenButtonContainer","AddTokenButton","setShowAddTokenDialog","textTransform","borderWidth","AddIcon","GreyTitle","_ref3","light","fontFamily","fontSize","StyledTr","tr","disableHover","dark","td","StyledTdMenu","DropdownContainer","AssetSymbol","AssetName","AssetAmount","green","AssetAmountUSD","MainHeaderRow","ValuesContainerForExtension","ValuesContainer","AddTokenBtnRow","LastStyledTd","associatedTokensCache","AssetsTable","_ref4","_wallet$publicKey","allTokensData","refreshTokensData","setCloseTokenAccountDialogOpen","useTheme","wallet","useWallet","walletPubkey","sortedPublicKeys","useMemo","values","sort","tokenA","tokenB","isTokenAUSDT","isUSDToken","symbol","isTokenBUSDT","tokenAPrice","get","tokenBPrice","aVal","amount","bVal","PublicKey","address","equals","totalA","totalB","localeCompare","justify","RefreshIcon","display","overflowY","map","balanceInfo","i","AssetItem","Loading","colSpan","_ref5","_tokenSymbol","_tokenSymbol2","_tokenSymbol3","_tokenSymbol4","Map","useSolanaExplorerUrlSuffix","findAssociatedTokenAddress","assocTok","walletAccounts","Object","assign","priceForCalculate","usdValue","isAssociatedToken","acc","slice","stripDigitPlaces","align","formatNumberToUSFormat","hoverColor","white","main","ReceiveIcon","SendIcon","ExplorerIcon","textAlign","cursor","Dots","ActivitiesDropdown","React","prev","next","web3","Web3","window","ethereum","SUGGESTED_GAS_LIMIT","useEthAccount","account","setAccount","onChange","accounts","request","on","removeListener","getErc20Balance","erc20Address","parseInt","eth","getBalance","erc20","Contract","ERC20_ABI","value","decimals","Promise","all","methods","balanceOf","call","estimateErc20SwapFees","swapAddress","ethAccount","estimatedGas","gasPrice","getGasPrice","estimateEthSwapFees","approveAmount","addDecimals","approveEstimatedGas","approve","estimateGas","from","swapEstimatedGas","swapErc20ToSpl","destination","onStatusChange","swap","SWAP_ABI","encodedAmount","swapTx","swapEth","send","swapTxid","waitForTxid","step","txid","confirms","waitForConfirms","swapEthToSpl","approveTx","swapErc20","gasLimit","str","test","includes","intStr","fractionStr","split","repeat","replace","pendingNonces","Set","withdrawEth","withdrawal","callAsync","signature","txData","nonce","withdrawErc20","e","add","progressMessage","coin","ticker","delete","tx","resolve","reject","once","catch","resolved","receipt","ConnectToMetamaskButton","useCallAsync","isExtension","successMessage","MARKETS","forEach","market","deprecated","join","getFromCache","marketName","_rpcEndpoint","MAINNET_URL","data","asks","bids","price","mid","AddAccountDialog","open","onAdd","onClose","setName","isImport","setIsImport","importedPrivateKey","setPrivateKey","importedAccount","privateKey","Account","parse","_","decodeAccount","isDisabled","submit","handleKeyDown","event","key","DialogForm","onEnter","fullWidth","FakeInputs","Input","placeholder","onKeyDown","red","StyledCheckbox","id","checked","StyledLabel","htmlFor","InputWithPaste","type","containerStyle","onPasteClick","navigator","clipboard","readText","clipText","WhiteButton","useStyles","makeStyles","root","marginTop","spacing","alignItems","CopyableDisplay","label","autoFocus","qrCode","helperText","enqueueSnackbar","useSnackbar","textareaRef","useRef","classes","className","TextField","inputRef","ref","current","multiline","readOnly","onFocus","currentTarget","select","textArea","spellCheck","IconButton","copyLink","document","execCommand","variant","autoHideDuration","CopyIcon","Qrcode","useQrCodeStyles","qrcodeContainer","flexDirection","showQrcode","setShowQrcode","_Fragment","QrcodeIcon","Dialog","DialogContent","QRCode","includeMargin","explorerLink","container","minWidth","TokenInfoDialog","DialogTitle","abbreviateAddress","Typography","Link","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","tabs","borderBottom","palette","paper","WUSDC_MINT","USDC_MINT","SendDialog","isProdNetwork","useIsProdNetwork","tab","setTab","onSubmitRef","swapCoinInfo","showSwapAddress","onSubmit","Tabs","textColor","indicatorColor","Tab","erc20Contract","SendSplDialog","SendSwapDialog","wusdcToSplUsdc","blockchain","EthWithdrawalCompleter","defaultAddressHelperText","sendTransaction","sending","useSendTransaction","addressHelperText","setAddressHelperText","passValidation","setPassValidation","overrideDestinationCheck","setOverrideDestinationCheck","shouldShowOverride","setShouldShowOverride","fields","destinationAddress","transferAmountString","validAmount","useForm","mintString","destinationAccountInfo","getAccountInfo","owner","TOKEN_PROGRAM_ID","parseTokenAccountData","console","log","Math","round","parseFloat","transferToken","makeTransaction","onSuccess","DialogActions","Switch","Button","setSignature","setDestinationAddress","needMetamask","ethBalance","refreshInterval","splUsdcWalletAddress","useWalletAddressForMint","splMint","wusdcToUsdc","swapInfo","memo","SendSwapProgress","sendButton","Tooltip","placement","paddingTop","swaps","getSignatureStatus","confirmations","ethTxid","deposit","_withdrawal$txid","startsWith","Stepper","activeStep","Step","StepLabel","CircularProgress","passAddressValidation","overrideValidation","setTransferAmountString","balanceAmount","parsedAmount","trim","InputProps","endAdornment","InputAdornment","position","balanceAmountToUserAmount","inputProps","pow","EthWithdrawalCompleterItem","_ref6","CloseTokenAccountDialog","closeTokenAccount","refreshWalletPublicKeys","MergeAccountsDialog","publicKeys","useWalletPublicKeys","isMerging","setIsMerging","mergeCheck","setMergeCheck","tokenInfosMap","useTokenInfosMap","mergeAccounts","retryCount","tokenAccounts","getMultipleSolanaAccounts","filter","groupedTokenAccounts","ta","push","mints","keys","k","mintGroup","assocTokAddr","tokenInfo","getTokenInfo","mergeMint","sleep","refreshAccountInfo","refresh","close","err","toLowerCase","PaperComponent","StyledPaper","fullScreen","maxWidth","maxFont","AttentionComponent","blockHeight","iconStyle","textStyle","text","mintAccountSet","associatedTokenAccount","tokAddr","pop","createAssociatedTokenAccount","splTokenMintAddress","tokenAccount","balanceFormat","useGrouping","numberFormat","currency","textOverflow","overflowX","itemDetails","marginLeft","buttonContainer","BalanceListItem","expandable","setUsdValue","useBalanceInfo","setOpen","setForceUpdate","setPrice","LoadingIndicator","delay","forceUpdate","subtitle","overflow","FingerprintIcon","StyledTitle","ListItem","button","ListItemIcon","flex","ListItemText","primary","format","secondary","secondaryTypographyProps","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","BalanceListItemDetails","_balanceInfo$mint2","sendDialogOpen","tokenInfoDialogOpen","setTokenInfoDialogOpen","exportAccDialogOpen","setExportAccDialogOpen","closeTokenAccountDialogOpen","_balanceInfo$mint","exportNeedsDisplay","allowsExport","ExportAccountDialog","showTokenInfoDialog","startIcon","InfoIcon","DeleteIcon","AddHardwareView","DerivationPathMenuItem","toDerivationPath","dPathMenuItem","DERIVATION_PATH","bip44","bip44Change","bip44Root","AddHardwareWalletDialog","view","setView","hardwareAccount","setHardwareAccount","AddHardwareWalletSplash","onContinue","LedgerAccounts","ConfirmHardwareWallet","onDone","onBack","didConfirm","setDidConfirm","provider","confirmPublicKey","AccountsSelector","showRoot","showDeprecated","setDPathMenuItem","gutterBottom","FormControl","Select","MenuItem","setAccounts","LedgerWalletProvider","derivationPath","init","statusCode","pubKey","change","isHidden","setIsHidden","password","setPassword","keyOutput","setKeyOutput","checkIsCorrectPassword","secretKey","right","top","CloseIcon","InputWithEye","onEyeClick","showPassword","TextareaWithCopy","ExportMnemonicDialog","mnemonic","setMnemonic","res","DeleteMnemonicDialog","openExportMnemonicPopup","deleteCheck","setDeleteCheck","RedFilledButton","orange","forgetWallet","Paper","Text","span","paddingBottom","ConnectionsList","connectedWallets","useConnectedWallets","List","disablePadding","entries","origin","connectedWallet","ConnectionsListItem","ItemDetails","ButtonContainer","StyledListItemIcon","ICON_SIZE","ListItemImage","IMAGE_SIZE","appleIconUrl","faviconUrl","iconUrl","setIconUrl","useWalletSelector","find","ListItemButton","autoApprove","DoneAll","setAutoApprove","chrome","storage","local","set","disconnectWallet","ConnectionsPage","Container","Grid","item","xs","ExportPrivateKeyButton","RowWithSelector","WalletActionButton","openPopup","icon","buttonText","btnWidth","accountNameSize","isAddAccountOpen","setIsAddAccountOpen","isAddHardwareWalletDialogOpen","setIsAddHardwareWalletDialogOpen","isExportMnemonicOpen","setIsExportMnemonicOpen","isExportAccountOpen","setIsExportAccountOpen","isDeleteAccountOpen","setIsDeleteAccountOpen","isMergeAccountsOpen","setIsMergeAccoutsOpen","isManageConnectiosOpen","setIsManageConnectiosOpen","hardwareWalletAccount","setHardwareWalletAccount","setWalletSelector","addAccount","accountsToShow","concat","selectedAccount","a","isSelected","ExpandMoreIcon","Legend","maxHeight","selector","StyledRadio","blue","serum","ImportHardwareIcon","MergeAccountsIcon","ExportMnemonicIcon","ManageConnections","DeleteAccountIcon","AddAccountPopup","walletIndex","importedPubkey","ledger","AddHardwareWalletPopup","_ref7","ExportAccount","ForgetWallet","localStorage","getItem"],"sourceRoot":""}